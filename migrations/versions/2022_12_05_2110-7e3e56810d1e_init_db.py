"""init db

Revision ID: 7e3e56810d1e
Revises: 
Create Date: 2022-12-05 21:10:29.843040

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '7e3e56810d1e'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('auth_group',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('auth_permission',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('url', sa.String(), nullable=False),
    sa.Column('action', postgresql.ENUM('GET', 'PUT', 'POST', 'DELETE', name='method'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('auth_role',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('circuit_provider',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('asn', sa.Integer(), nullable=True),
    sa.Column('account', sa.String(), nullable=True),
    sa.Column('portal', sa.String(), nullable=True),
    sa.Column('noc_contact', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('admin_contact', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('comments', sa.TEXT(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('circuit_type',
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_circuit_type_name'), 'circuit_type', ['name'], unique=True)
    op.create_table('cluster',
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_cluster_created_at'), 'cluster', ['created_at'], unique=False)
    op.create_index(op.f('ix_cluster_name'), 'cluster', ['name'], unique=True)
    op.create_table('contact',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('phone', sa.String(), nullable=True),
    sa.Column('categories', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('dcim_cable',
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('cable_type', sa.String(), nullable=True),
    sa.Column('status', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_dcim_cable_created_at'), 'dcim_cable', ['created_at'], unique=False)
    op.create_index(op.f('ix_dcim_cable_name'), 'dcim_cable', ['name'], unique=True)
    op.create_table('dcim_device_role',
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('vm_role', sa.Boolean(), server_default=sa.text('false'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_dcim_device_role_name'), 'dcim_device_role', ['name'], unique=True)
    op.create_table('dcim_manufacturer',
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_dcim_manufacturer_name'), 'dcim_manufacturer', ['name'], unique=True)
    op.create_table('dcim_platform',
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('napalm_driver', sa.String(), nullable=True),
    sa.Column('napalm_args', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_dcim_platform_name'), 'dcim_platform', ['name'], unique=True)
    op.create_table('dcim_rack_role',
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_dcim_rack_role_name'), 'dcim_rack_role', ['name'], unique=True)
    op.create_table('dcim_region',
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('parent_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['parent_id'], ['dcim_region.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('parent_id', 'name')
    )
    op.create_index(op.f('ix_dcim_region_name'), 'dcim_region', ['name'], unique=True)
    op.create_table('department',
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_department_name'), 'department', ['name'], unique=True)
    op.create_table('ipam_asn',
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('asn', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('asn')
    )
    op.create_index(op.f('ix_ipam_asn_created_at'), 'ipam_asn', ['created_at'], unique=False)
    op.create_table('ipam_rir',
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('is_private', sa.Boolean(), server_default=sa.text('false'), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_ipam_rir_created_at'), 'ipam_rir', ['created_at'], unique=False)
    op.create_table('ipam_role',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('ipam_route_target',
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_ipam_route_target_name'), 'ipam_route_target', ['name'], unique=True)
    op.create_table('ipam_vlan_group',
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_ipam_vlan_group_name'), 'ipam_vlan_group', ['name'], unique=True)
    op.create_table('ipam_vrf',
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('rd', sa.String(), nullable=True),
    sa.Column('enforce_unique', sa.Boolean(), server_default=sa.text('true'), nullable=True, comment='Enforce unique space, prevent duplicate IP/prefix'),
    sa.Column('description', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('rd')
    )
    op.create_index(op.f('ix_ipam_vrf_name'), 'ipam_vrf', ['name'], unique=True)
    op.create_table('auth_role_permission_link',
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.Column('permission_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['permission_id'], ['auth_permission.id'], ),
    sa.ForeignKeyConstraint(['role_id'], ['auth_role.id'], ),
    sa.PrimaryKeyConstraint('role_id', 'permission_id')
    )
    op.create_table('auth_user',
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('hashed_password', sa.String(), nullable=False),
    sa.Column('is_active', sa.Boolean(), server_default=sa.text('true'), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['role_id'], ['auth_role.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_index(op.f('ix_auth_user_created_at'), 'auth_user', ['created_at'], unique=False)
    op.create_table('circuit',
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('cid', sa.String(), nullable=True),
    sa.Column('provider_id', sa.Integer(), nullable=True),
    sa.Column('status', postgresql.ENUM('Planning', 'Active', 'Provisioning', 'Offline', name='circuit_status'), nullable=False),
    sa.Column('circuit_type_id', sa.Integer(), nullable=True),
    sa.Column('install_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('purchase_term', sa.String(), nullable=True),
    sa.Column('commit_rate', sa.Integer(), nullable=True, comment='Mbps'),
    sa.Column('comments', sa.TEXT(), nullable=True),
    sa.Column('vendor_available_ip', postgresql.ARRAY(postgresql.INET()), nullable=True),
    sa.Column('vendor_available_gateway', postgresql.ARRAY(postgresql.INET()), nullable=True),
    sa.ForeignKeyConstraint(['circuit_type_id'], ['circuit_type.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['provider_id'], ['circuit_provider.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('cid')
    )
    op.create_index(op.f('ix_circuit_created_at'), 'circuit', ['created_at'], unique=False)
    op.create_index(op.f('ix_circuit_name'), 'circuit', ['name'], unique=True)
    op.create_table('dcim_cable_termination',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('cable_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['cable_id'], ['dcim_cable.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('dcim_device_type',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('manufacturer_id', sa.Integer(), nullable=True),
    sa.Column('model', sa.String(), nullable=False),
    sa.Column('u_height', sa.Float(), server_default='1.0', nullable=True),
    sa.Column('is_full_depth', sa.Boolean(), server_default=sa.text('true'), nullable=True),
    sa.ForeignKeyConstraint(['manufacturer_id'], ['dcim_manufacturer.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('manufacturer_id', 'model')
    )
    op.create_table('dcim_site',
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('site_code', sa.String(), nullable=False),
    sa.Column('status', postgresql.ENUM('Active', 'Retired', 'Planning', 'Staged', 'Canceled', 'Validated', name='site_status'), nullable=True),
    sa.Column('region_id', sa.Integer(), nullable=True),
    sa.Column('facility', sa.String(), nullable=True),
    sa.Column('time_zone', sa.String(), nullable=True),
    sa.Column('physical_address', sa.String(), nullable=True),
    sa.Column('shipping_address', sa.String(), nullable=True),
    sa.Column('latitude', sa.Float(), nullable=True),
    sa.Column('longitude', sa.Float(), nullable=True),
    sa.Column('classification', sa.String(), nullable=True),
    sa.Column('functions', postgresql.ARRAY(sa.String(), dimensions=1), nullable=True),
    sa.ForeignKeyConstraint(['region_id'], ['dcim_region.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_dcim_site_created_at'), 'dcim_site', ['created_at'], unique=False)
    op.create_index(op.f('ix_dcim_site_name'), 'dcim_site', ['name'], unique=True)
    op.create_index(op.f('ix_dcim_site_site_code'), 'dcim_site', ['site_code'], unique=True)
    op.create_table('ipam_block',
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('prefix', postgresql.CIDR(), nullable=False),
    sa.Column('rir_id', sa.Integer(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['rir_id'], ['ipam_rir.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_ipam_block_created_at'), 'ipam_block', ['created_at'], unique=False)
    op.create_table('ipam_ip_address',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('address', postgresql.INET(), nullable=False),
    sa.Column('vrf_id', sa.Integer(), nullable=True),
    sa.Column('status', postgresql.ENUM('Active', 'Reserved', 'Deprecated', 'DHCP', 'Available', name='ip_status'), nullable=False),
    sa.Column('dns_name', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['vrf_id'], ['ipam_vrf.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_ipam_ip_address_address'), 'ipam_ip_address', ['address'], unique=False)
    op.create_table('ipam_ip_range',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('start_address', postgresql.INET(), nullable=True),
    sa.Column('end_address', postgresql.INET(), nullable=True),
    sa.Column('status', postgresql.ENUM('Active', 'Reserved', 'Deprecated', name='vlan_status'), nullable=False),
    sa.Column('size', sa.Integer(), nullable=True),
    sa.Column('vrf_id', sa.Integer(), nullable=True),
    sa.Column('role_id', sa.Integer(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['role_id'], ['ipam_role.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['vrf_id'], ['ipam_vrf.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('ipam_vrf_route_target_link',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('vrf_id', sa.Integer(), nullable=False),
    sa.Column('route_target_id', sa.Integer(), nullable=False),
    sa.Column('target_type', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['route_target_id'], ['ipam_route_target.id'], ),
    sa.ForeignKeyConstraint(['vrf_id'], ['ipam_vrf.id'], ),
    sa.PrimaryKeyConstraint('id', 'vrf_id', 'route_target_id')
    )
    op.create_table('server',
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=True),
    sa.Column('platform_id', sa.Integer(), nullable=True),
    sa.Column('primary_ipv4', postgresql.INET(), nullable=True),
    sa.Column('primary_ipv6', postgresql.INET(), nullable=True),
    sa.Column('tags', postgresql.ARRAY(sa.String(), dimensions=1), nullable=True),
    sa.Column('cluster_id', sa.Integer(), nullable=True),
    sa.Column('is_vm', sa.Boolean(), server_default=sa.text('true'), nullable=False),
    sa.Column('cpu', sa.Integer(), nullable=True),
    sa.Column('memory', sa.String(), nullable=False),
    sa.Column('disk', sa.String(), nullable=True),
    sa.Column('contact_id', sa.Integer(), nullable=True),
    sa.Column('owner', sa.String(), nullable=True),
    sa.Column('department_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['cluster_id'], ['cluster.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['contact_id'], ['contact.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['department_id'], ['department.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['platform_id'], ['dcim_platform.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['role_id'], ['dcim_device_role.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_server_created_at'), 'server', ['created_at'], unique=False)
    op.create_index(op.f('ix_server_name'), 'server', ['name'], unique=True)
    op.create_table('auth_user_group_link',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('group_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['group_id'], ['auth_group.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['auth_user.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'group_id')
    )
    op.create_table('circuit_contact_link',
    sa.Column('circuit_id', sa.Integer(), nullable=False),
    sa.Column('contact_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['circuit_id'], ['circuit.id'], ),
    sa.ForeignKeyConstraint(['contact_id'], ['contact.id'], ),
    sa.PrimaryKeyConstraint('circuit_id', 'contact_id')
    )
    op.create_table('circuit_termination',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('term_side', postgresql.ENUM('Termination_Side_A', 'Termination_Side_Z', name='termination'), nullable=True),
    sa.Column('circuit_id', sa.Integer(), nullable=True),
    sa.Column('site_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['circuit_id'], ['circuit.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['site_id'], ['dcim_site.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('circuit_id', 'term_side')
    )
    op.create_table('dcim_location',
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('status', postgresql.ENUM('Active', 'Retired', 'Planning', 'Staged', 'Canceled', 'Validated', name='location_status'), nullable=True),
    sa.Column('site_id', sa.Integer(), nullable=True),
    sa.Column('parent_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['parent_id'], ['dcim_location.id'], ),
    sa.ForeignKeyConstraint(['site_id'], ['dcim_site.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('site_id', 'name')
    )
    op.create_index(op.f('ix_dcim_location_created_at'), 'dcim_location', ['created_at'], unique=False)
    op.create_table('dcim_site_asn_link',
    sa.Column('site_id', sa.Integer(), nullable=False),
    sa.Column('asn_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['asn_id'], ['ipam_asn.id'], ),
    sa.ForeignKeyConstraint(['site_id'], ['dcim_site.id'], ),
    sa.PrimaryKeyConstraint('site_id', 'asn_id')
    )
    op.create_table('dcim_site_contact_link',
    sa.Column('site_id', sa.Integer(), nullable=False),
    sa.Column('contact_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['contact_id'], ['contact.id'], ),
    sa.ForeignKeyConstraint(['site_id'], ['dcim_site.id'], ),
    sa.PrimaryKeyConstraint('site_id', 'contact_id')
    )
    op.create_table('ipam_prefix',
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('prefix', postgresql.CIDR(), nullable=False),
    sa.Column('status', postgresql.ENUM('Active', 'Reserved', 'Deprecated', name='vlan_status'), nullable=False),
    sa.Column('site_id', sa.Integer(), nullable=True),
    sa.Column('role_id', sa.Integer(), nullable=True),
    sa.Column('is_pool', sa.Boolean(), server_default=sa.text('false'), nullable=True),
    sa.ForeignKeyConstraint(['role_id'], ['ipam_role.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['site_id'], ['dcim_site.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_ipam_prefix_created_at'), 'ipam_prefix', ['created_at'], unique=False)
    op.create_table('ipam_vlan',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('status', postgresql.ENUM('Active', 'Reserved', 'Deprecated', name='vlan_status'), nullable=False),
    sa.Column('site_id', sa.Integer(), nullable=True),
    sa.Column('vlan_group_id', sa.Integer(), nullable=True),
    sa.Column('vid', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['role_id'], ['ipam_role.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['site_id'], ['dcim_site.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['vlan_group_id'], ['ipam_vlan_group.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('site_id', 'vlan_group_id', 'vid', 'id')
    )
    op.create_table('dcim_rack',
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('facility_id', sa.String(), nullable=True),
    sa.Column('site_id', sa.Integer(), nullable=True),
    sa.Column('location_id', sa.Integer(), nullable=True),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('serial_num', sa.String(), nullable=True),
    sa.Column('asset_tag', sa.String(), nullable=True),
    sa.Column('rack_type', sa.String(), nullable=True),
    sa.Column('width', sa.Integer(), nullable=False, comment='Rail-to-rail width'),
    sa.Column('u_height', sa.Integer(), nullable=False, comment='Height in rack units'),
    sa.Column('desc_units', sa.Boolean(), server_default=sa.text('false'), nullable=True, comment='Units are numbered top-to-bottom'),
    sa.Column('outer_width', sa.Integer(), nullable=False, comment='Outer dimension of rack (width)'),
    sa.Column('outer_depth', sa.Integer(), nullable=False, comment='Outer dimension of rack (depth)'),
    sa.Column('outer_unit', sa.String(), nullable=True),
    sa.Column('comments', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['location_id'], ['dcim_location.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['site_id'], ['dcim_site.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('asset_tag')
    )
    op.create_index(op.f('ix_dcim_rack_created_at'), 'dcim_rack', ['created_at'], unique=False)
    op.create_index(op.f('ix_dcim_rack_name'), 'dcim_rack', ['name'], unique=True)
    op.create_table('dcim_device',
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('primary_ipv4', postgresql.INET(), nullable=False),
    sa.Column('primary_ipv6', postgresql.INET(), nullable=True),
    sa.Column('device_type_id', sa.Integer(), nullable=True),
    sa.Column('device_role_id', sa.Integer(), nullable=True),
    sa.Column('platform_id', sa.Integer(), nullable=True),
    sa.Column('site_id', sa.Integer(), nullable=True),
    sa.Column('location_id', sa.Integer(), nullable=True),
    sa.Column('rack_id', sa.Integer(), nullable=True),
    sa.Column('position', sa.Float(), nullable=True),
    sa.Column('serial_num', sa.String(), nullable=True),
    sa.Column('asset_tag', sa.String(), nullable=True),
    sa.Column('status', postgresql.ENUM('Active', 'Offline', 'Staged', 'Planning', name='device_status'), nullable=False),
    sa.Column('cluster_id', sa.Integer(), nullable=True),
    sa.Column('comments', sa.Text(), nullable=True),
    sa.Column('department_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['cluster_id'], ['cluster.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['department_id'], ['department.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['device_role_id'], ['dcim_device_role.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['device_type_id'], ['dcim_device_type.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['location_id'], ['dcim_location.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['platform_id'], ['dcim_platform.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['rack_id'], ['dcim_rack.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['site_id'], ['dcim_site.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('asset_tag'),
    sa.UniqueConstraint('cluster_id', 'name'),
    sa.UniqueConstraint('rack_id', 'position'),
    sa.UniqueConstraint('serial_num')
    )
    op.create_index(op.f('ix_dcim_device_created_at'), 'dcim_device', ['created_at'], unique=False)
    op.create_index(op.f('ix_dcim_device_name'), 'dcim_device', ['name'], unique=False)
    op.create_index(op.f('ix_dcim_device_primary_ipv4'), 'dcim_device', ['primary_ipv4'], unique=False)
    op.create_table('dcim_interface',
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('if_index', sa.Integer(), nullable=True),
    sa.Column('speed', sa.Integer(), nullable=True),
    sa.Column('mode', postgresql.ENUM('access', 'trunk', 'layer-3', name='mode_enum'), nullable=True),
    sa.Column('mtu', sa.Integer(), nullable=True),
    sa.Column('enabled', sa.Boolean(), server_default=sa.text('true'), nullable=False),
    sa.Column('device_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['device_id'], ['dcim_device.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_dcim_interface_created_at'), 'dcim_interface', ['created_at'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_dcim_interface_created_at'), table_name='dcim_interface')
    op.drop_table('dcim_interface')
    op.drop_index(op.f('ix_dcim_device_primary_ipv4'), table_name='dcim_device')
    op.drop_index(op.f('ix_dcim_device_name'), table_name='dcim_device')
    op.drop_index(op.f('ix_dcim_device_created_at'), table_name='dcim_device')
    op.drop_table('dcim_device')
    op.drop_index(op.f('ix_dcim_rack_name'), table_name='dcim_rack')
    op.drop_index(op.f('ix_dcim_rack_created_at'), table_name='dcim_rack')
    op.drop_table('dcim_rack')
    op.drop_table('ipam_vlan')
    op.drop_index(op.f('ix_ipam_prefix_created_at'), table_name='ipam_prefix')
    op.drop_table('ipam_prefix')
    op.drop_table('dcim_site_contact_link')
    op.drop_table('dcim_site_asn_link')
    op.drop_index(op.f('ix_dcim_location_created_at'), table_name='dcim_location')
    op.drop_table('dcim_location')
    op.drop_table('circuit_termination')
    op.drop_table('circuit_contact_link')
    op.drop_table('auth_user_group_link')
    op.drop_index(op.f('ix_server_name'), table_name='server')
    op.drop_index(op.f('ix_server_created_at'), table_name='server')
    op.drop_table('server')
    op.drop_table('ipam_vrf_route_target_link')
    op.drop_table('ipam_ip_range')
    op.drop_index(op.f('ix_ipam_ip_address_address'), table_name='ipam_ip_address')
    op.drop_table('ipam_ip_address')
    op.drop_index(op.f('ix_ipam_block_created_at'), table_name='ipam_block')
    op.drop_table('ipam_block')
    op.drop_index(op.f('ix_dcim_site_site_code'), table_name='dcim_site')
    op.drop_index(op.f('ix_dcim_site_name'), table_name='dcim_site')
    op.drop_index(op.f('ix_dcim_site_created_at'), table_name='dcim_site')
    op.drop_table('dcim_site')
    op.drop_table('dcim_device_type')
    op.drop_table('dcim_cable_termination')
    op.drop_index(op.f('ix_circuit_name'), table_name='circuit')
    op.drop_index(op.f('ix_circuit_created_at'), table_name='circuit')
    op.drop_table('circuit')
    op.drop_index(op.f('ix_auth_user_created_at'), table_name='auth_user')
    op.drop_table('auth_user')
    op.drop_table('auth_role_permission_link')
    op.drop_index(op.f('ix_ipam_vrf_name'), table_name='ipam_vrf')
    op.drop_table('ipam_vrf')
    op.drop_index(op.f('ix_ipam_vlan_group_name'), table_name='ipam_vlan_group')
    op.drop_table('ipam_vlan_group')
    op.drop_index(op.f('ix_ipam_route_target_name'), table_name='ipam_route_target')
    op.drop_table('ipam_route_target')
    op.drop_table('ipam_role')
    op.drop_index(op.f('ix_ipam_rir_created_at'), table_name='ipam_rir')
    op.drop_table('ipam_rir')
    op.drop_index(op.f('ix_ipam_asn_created_at'), table_name='ipam_asn')
    op.drop_table('ipam_asn')
    op.drop_index(op.f('ix_department_name'), table_name='department')
    op.drop_table('department')
    op.drop_index(op.f('ix_dcim_region_name'), table_name='dcim_region')
    op.drop_table('dcim_region')
    op.drop_index(op.f('ix_dcim_rack_role_name'), table_name='dcim_rack_role')
    op.drop_table('dcim_rack_role')
    op.drop_index(op.f('ix_dcim_platform_name'), table_name='dcim_platform')
    op.drop_table('dcim_platform')
    op.drop_index(op.f('ix_dcim_manufacturer_name'), table_name='dcim_manufacturer')
    op.drop_table('dcim_manufacturer')
    op.drop_index(op.f('ix_dcim_device_role_name'), table_name='dcim_device_role')
    op.drop_table('dcim_device_role')
    op.drop_index(op.f('ix_dcim_cable_name'), table_name='dcim_cable')
    op.drop_index(op.f('ix_dcim_cable_created_at'), table_name='dcim_cable')
    op.drop_table('dcim_cable')
    op.drop_table('contact')
    op.drop_index(op.f('ix_cluster_name'), table_name='cluster')
    op.drop_index(op.f('ix_cluster_created_at'), table_name='cluster')
    op.drop_table('cluster')
    op.drop_index(op.f('ix_circuit_type_name'), table_name='circuit_type')
    op.drop_table('circuit_type')
    op.drop_table('circuit_provider')
    op.drop_table('auth_role')
    op.drop_table('auth_permission')
    op.drop_table('auth_group')
    # ### end Alembic commands ###
