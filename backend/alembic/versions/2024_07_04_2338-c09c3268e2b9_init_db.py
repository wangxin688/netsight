"""init db

Revision ID: c09c3268e2b9
Revises:
Create Date: 2024-07-04 23:38:05.566902

"""

from collections.abc import Sequence

import sqlalchemy as sa
import sqlalchemy_utils
from sqlalchemy.dialects import postgresql

import src
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "c09c3268e2b9"
down_revision: str | None = None
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "asn",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("asn", sa.Integer(), nullable=False),
        sa.Column("description", sa.String(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("asn"),
    )
    op.create_index(op.f("ix_asn_id"), "asn", ["id"], unique=False)
    op.create_table(
        "block",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("block", src.core.database.types.ipaddress.PgCIDR(), nullable=False),
        sa.Column("size", sa.Integer(), nullable=False),
        sa.Column("range", sa.String(), nullable=False),
        sa.Column("is_private", sa.Boolean(), nullable=False),
        sa.Column("description", sa.String(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("block"),
    )
    op.create_index(op.f("ix_block_id"), "block", ["id"], unique=False)
    op.create_table(
        "circuit_type",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", postgresql.HSTORE(text_type=sa.Text()), nullable=False),
        sa.Column("slug", sa.String(), nullable=False),
        sa.Column("description", sa.String(), nullable=True),
        sa.Column("created_at", src.core.database.types.datetime.DateTimeTZ(timezone=True), nullable=False),
        sa.Column("updated_at", src.core.database.types.datetime.DateTimeTZ(timezone=True), nullable=False),
        sa.Column("created_by_fk", sa.Integer(), nullable=True),
        sa.Column("updated_by_fk", sa.Integer(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("slug"),
    )
    op.create_index(op.f("ix_circuit_type_created_at"), "circuit_type", ["created_at"], unique=False)
    op.create_index(op.f("ix_circuit_type_id"), "circuit_type", ["id"], unique=False)
    op.create_table(
        "contact",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("avatar", sa.String(), nullable=True),
        sa.Column("email", sa.String(), nullable=True),
        sa.Column("phone", sa.String(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_contact_id"), "contact", ["id"], unique=False)
    op.create_table(
        "contact_role",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("description", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_contact_role_id"), "contact_role", ["id"], unique=False)
    op.create_table(
        "device_role",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", postgresql.HSTORE(text_type=sa.Text()), nullable=False),
        sa.Column("slug", sa.String(), nullable=False),
        sa.Column("priority", sa.Integer(), nullable=False),
        sa.Column("abbreviation", sa.String(), nullable=True),
        sa.Column("description", sa.String(), nullable=True),
        sa.Column("created_at", src.core.database.types.datetime.DateTimeTZ(timezone=True), nullable=False),
        sa.Column("updated_at", src.core.database.types.datetime.DateTimeTZ(timezone=True), nullable=False),
        sa.Column("created_by_fk", sa.Integer(), nullable=True),
        sa.Column("updated_by_fk", sa.Integer(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("slug"),
    )
    op.create_index(op.f("ix_device_role_created_at"), "device_role", ["created_at"], unique=False)
    op.create_index(op.f("ix_device_role_id"), "device_role", ["id"], unique=False)
    op.create_table(
        "ip_role",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", postgresql.HSTORE(text_type=sa.Text()), nullable=False),
        sa.Column("slug", sa.String(), nullable=False),
        sa.Column("description", sa.String(), nullable=True),
        sa.Column("created_at", src.core.database.types.datetime.DateTimeTZ(timezone=True), nullable=False),
        sa.Column("updated_at", src.core.database.types.datetime.DateTimeTZ(timezone=True), nullable=False),
        sa.Column("created_by_fk", sa.Integer(), nullable=True),
        sa.Column("updated_by_fk", sa.Integer(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("slug"),
    )
    op.create_index(op.f("ix_ip_role_created_at"), "ip_role", ["created_at"], unique=False)
    op.create_index(op.f("ix_ip_role_id"), "ip_role", ["id"], unique=False)
    op.create_table(
        "isp",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", postgresql.HSTORE(text_type=sa.Text()), nullable=False),
        sa.Column("account", sa.String(), nullable=True),
        sa.Column("portal", sa.String(), nullable=True),
        sa.Column("noc_contact", postgresql.ARRAY(sa.String()), nullable=True),
        sa.Column("admin_contact", postgresql.ARRAY(sa.String()), nullable=True),
        sa.Column("comments", sa.String(), nullable=True),
        sa.Column("created_at", src.core.database.types.datetime.DateTimeTZ(timezone=True), nullable=False),
        sa.Column("updated_at", src.core.database.types.datetime.DateTimeTZ(timezone=True), nullable=False),
        sa.Column("created_by_fk", sa.Integer(), nullable=True),
        sa.Column("updated_by_fk", sa.Integer(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_isp_created_at"), "isp", ["created_at"], unique=False)
    op.create_index(op.f("ix_isp_id"), "isp", ["id"], unique=False)
    op.create_table(
        "manufacturer",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", postgresql.HSTORE(text_type=sa.Text()), nullable=False),
        sa.Column("slug", sa.String(), nullable=False),
        sa.Column("created_at", src.core.database.types.datetime.DateTimeTZ(timezone=True), nullable=False),
        sa.Column("updated_at", src.core.database.types.datetime.DateTimeTZ(timezone=True), nullable=False),
        sa.Column("created_by_fk", sa.Integer(), nullable=True),
        sa.Column("updated_by_fk", sa.Integer(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("slug"),
    )
    op.create_index(op.f("ix_manufacturer_created_at"), "manufacturer", ["created_at"], unique=False)
    op.create_index(op.f("ix_manufacturer_id"), "manufacturer", ["id"], unique=False)
    op.create_table(
        "menu",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False, comment="the unique name of route"),
        sa.Column("hidden", sa.Boolean(), server_default=sa.text("false"), nullable=False),
        sa.Column("redirect", sa.String(), nullable=False, comment="redirect url for the route"),
        sa.Column(
            "hideChildrenInMenu",
            sa.Boolean(),
            server_default=sa.text("false"),
            nullable=False,
            comment="hide children in menu force or not",
        ),
        sa.Column("order", sa.Integer(), nullable=False),
        sa.Column("title", sa.String(), nullable=False, comment="the title of the route, 面包屑"),
        sa.Column("icon", sa.String(), nullable=True),
        sa.Column(
            "keepAlive",
            sa.Boolean(),
            server_default=sa.text("false"),
            nullable=False,
            comment="cache route, 开启multi-tab时为true",
        ),
        sa.Column(
            "hiddenHeaderContent",
            sa.Boolean(),
            server_default=sa.text("false"),
            nullable=False,
            comment="隐藏pageheader页面带的面包屑和标题栏",
        ),
        sa.Column("permission", postgresql.ARRAY(sa.Integer(), dimensions=1), nullable=True),
        sa.Column("parent_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(["parent_id"], ["menu.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    op.create_table(
        "permission",
        sa.Column("id", src.core.database.types.guid.GUID(length=16), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("url", sa.String(), nullable=False),
        sa.Column("method", sa.String(), nullable=False),
        sa.Column("tag", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_permission_id"), "permission", ["id"], unique=False)
    op.create_table(
        "platform",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("slug", sa.String(), nullable=False),
        sa.Column("description", sa.String(), nullable=True),
        sa.Column("netmiko_driver", sa.String(), nullable=True),
        sa.Column("created_at", src.core.database.types.datetime.DateTimeTZ(timezone=True), nullable=False),
        sa.Column("updated_at", src.core.database.types.datetime.DateTimeTZ(timezone=True), nullable=False),
        sa.Column("created_by_fk", sa.Integer(), nullable=True),
        sa.Column("updated_by_fk", sa.Integer(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
        sa.UniqueConstraint("slug"),
    )
    op.create_index(op.f("ix_platform_created_at"), "platform", ["created_at"], unique=False)
    op.create_index(op.f("ix_platform_id"), "platform", ["id"], unique=False)
    op.create_table(
        "role",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("slug", sa.String(), nullable=False),
        sa.Column("description", sa.String(), nullable=True),
        sa.Column("created_at", src.core.database.types.datetime.DateTimeTZ(timezone=True), nullable=False),
        sa.Column("updated_at", src.core.database.types.datetime.DateTimeTZ(timezone=True), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_role_created_at"), "role", ["created_at"], unique=False)
    op.create_index(op.f("ix_role_id"), "role", ["id"], unique=False)
    op.create_table(
        "route_target",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("description", sa.String(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    op.create_index(op.f("ix_route_target_id"), "route_target", ["id"], unique=False)
    op.create_table(
        "site_group",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("slug", sa.String(), nullable=False),
        sa.Column("description", sa.String(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
        sa.UniqueConstraint("slug"),
    )
    op.create_table(
        "vrf",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("rd", sa.String(), nullable=False),
        sa.Column(
            "enforce_unique",
            sa.Boolean(),
            server_default=sa.text("true"),
            nullable=False,
            comment="Enforce unique space, prevent duplicate IP/prefix",
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
        sa.UniqueConstraint("rd"),
    )
    op.create_index(op.f("ix_vrf_id"), "vrf", ["id"], unique=False)
    op.create_table("wlan_config", sa.Column("id", sa.Integer(), nullable=False), sa.PrimaryKeyConstraint("id"))
    op.create_index(op.f("ix_wlan_config_id"), "wlan_config", ["id"], unique=False)
    op.create_table(
        "device_type",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("snmp_sysobjectid", sa.String(), nullable=False),
        sa.Column("u_height", sa.Float(), server_default="1.0", nullable=False),
        sa.Column("front_image", sa.String(), nullable=True),
        sa.Column("rear_image", sa.String(), nullable=True),
        sa.Column("manufacturer_id", sa.Integer(), nullable=False),
        sa.Column("platform_id", sa.Integer(), nullable=False),
        sa.Column("created_at", src.core.database.types.datetime.DateTimeTZ(timezone=True), nullable=False),
        sa.Column("updated_at", src.core.database.types.datetime.DateTimeTZ(timezone=True), nullable=False),
        sa.Column("created_by_fk", sa.Integer(), nullable=True),
        sa.Column("updated_by_fk", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(["manufacturer_id"], ["manufacturer.id"], ondelete="RESTRICT"),
        sa.ForeignKeyConstraint(["platform_id"], ["platform.id"], ondelete="RESTRICT"),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("manufacturer_id", "name"),
        sa.UniqueConstraint("name"),
    )
    op.create_index(op.f("ix_device_type_created_at"), "device_type", ["created_at"], unique=False)
    op.create_index(op.f("ix_device_type_id"), "device_type", ["id"], unique=False)
    op.create_table(
        "group",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("description", sa.String(), nullable=True),
        sa.Column("role_id", sa.Integer(), nullable=False),
        sa.Column("created_at", src.core.database.types.datetime.DateTimeTZ(timezone=True), nullable=False),
        sa.Column("updated_at", src.core.database.types.datetime.DateTimeTZ(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(["role_id"], ["role.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_group_created_at"), "group", ["created_at"], unique=False)
    op.create_index(op.f("ix_group_id"), "group", ["id"], unique=False)
    op.create_table(
        "ip_range",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("start_address", src.core.database.types.ipaddress.PgIpInterface(), nullable=False),
        sa.Column("end_address", src.core.database.types.ipaddress.PgIpInterface(), nullable=False),
        sa.Column("status", sqlalchemy_utils.types.choice.ChoiceType(length=255), nullable=False),
        sa.Column("description", sa.String(), nullable=True),
        sa.Column("vrf_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(["vrf_id"], ["vrf.id"], ondelete="SET NULL"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_ip_range_id"), "ip_range", ["id"], unique=False)
    op.create_table(
        "isp_asn",
        sa.Column("isp_id", sa.Integer(), nullable=False),
        sa.Column("asn_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(["asn_id"], ["asn.id"]),
        sa.ForeignKeyConstraint(["isp_id"], ["isp.id"]),
        sa.PrimaryKeyConstraint("isp_id", "asn_id"),
    )
    op.create_table(
        "jinja_template",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("platform_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(["platform_id"], ["platform.id"], ondelete="RESTRICT"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_jinja_template_id"), "jinja_template", ["id"], unique=False)
    op.create_table(
        "role_menu",
        sa.Column("role_id", sa.Integer(), nullable=False),
        sa.Column("menu_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(["menu_id"], ["menu.id"]),
        sa.ForeignKeyConstraint(["role_id"], ["role.id"]),
        sa.PrimaryKeyConstraint("role_id", "menu_id"),
    )
    op.create_table(
        "role_permission",
        sa.Column("role_id", sa.Integer(), nullable=False),
        sa.Column("permission_id", src.core.database.types.guid.GUID(length=16), nullable=False),
        sa.ForeignKeyConstraint(["permission_id"], ["permission.id"]),
        sa.ForeignKeyConstraint(["role_id"], ["role.id"]),
        sa.PrimaryKeyConstraint("role_id", "permission_id"),
    )
    op.create_table(
        "site",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("site_code", sa.String(), nullable=False),
        sa.Column("status", sqlalchemy_utils.types.choice.ChoiceType(length=255), nullable=False),
        sa.Column("facility_code", sa.String(), nullable=True),
        sa.Column("time_zone", sa.String(), nullable=True),
        sa.Column("country", sa.String(), nullable=True),
        sa.Column("city", sa.String(), nullable=True),
        sa.Column("address", sa.String(), nullable=False),
        sa.Column("latitude", sa.Float(), nullable=False),
        sa.Column("longitude", sa.Float(), nullable=False),
        sa.Column("classification", sa.String(), nullable=True),
        sa.Column("comments", sa.String(), nullable=True),
        sa.Column("site_group_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(["site_group_id"], ["site_group.id"], ondelete="RESTRICT"),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    op.create_index(op.f("ix_site_id"), "site", ["id"], unique=False)
    op.create_index(op.f("ix_site_site_code"), "site", ["site_code"], unique=True)
    op.create_table(
        "textfsm_template",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("commonad", sa.String(), nullable=False),
        sa.Column("platform_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(["platform_id"], ["platform.id"], ondelete="RESTRICT"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_textfsm_template_id"), "textfsm_template", ["id"], unique=False)
    op.create_table(
        "vrf_route_target",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("vrf_id", sa.Integer(), nullable=False),
        sa.Column("route_target_id", sa.Integer(), nullable=False),
        sa.Column("target", sa.String(), nullable=False),
        sa.ForeignKeyConstraint(["route_target_id"], ["route_target.id"]),
        sa.ForeignKeyConstraint(["vrf_id"], ["vrf.id"]),
        sa.PrimaryKeyConstraint("id", "vrf_id", "route_target_id"),
    )
    op.create_index(op.f("ix_vrf_route_target_id"), "vrf_route_target", ["id"], unique=False)
    op.create_table(
        "location",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("location_type", sqlalchemy_utils.types.choice.ChoiceType(length=255), nullable=False),
        sa.Column("description", sa.String(), nullable=True),
        sa.Column("status", sqlalchemy_utils.types.choice.ChoiceType(length=255), nullable=False),
        sa.Column("site_id", sa.Integer(), nullable=False),
        sa.Column("parent_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(["parent_id"], ["location.id"]),
        sa.ForeignKeyConstraint(["site_id"], ["site.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("site_id", "name"),
    )
    op.create_table(
        "site_asn",
        sa.Column("site_id", sa.Integer(), nullable=False),
        sa.Column("asn_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(["asn_id"], ["asn.id"]),
        sa.ForeignKeyConstraint(["site_id"], ["site.id"]),
        sa.PrimaryKeyConstraint("site_id", "asn_id"),
    )
    op.create_table(
        "site_contact",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("contact_id", sa.Integer(), nullable=False),
        sa.Column("site_id", sa.Integer(), nullable=False),
        sa.Column("contact_role_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(["contact_id"], ["contact.id"], ondelete="RESTRICT"),
        sa.ForeignKeyConstraint(["contact_role_id"], ["contact_role.id"], ondelete="RESTRICT"),
        sa.ForeignKeyConstraint(["site_id"], ["site.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_site_contact_id"), "site_contact", ["id"], unique=False)
    op.create_table(
        "user",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("email", sa.String(), nullable=True),
        sa.Column("phone", sa.String(), nullable=True),
        sa.Column("password", sa.String(), nullable=False),
        sa.Column("avatar", sa.String(), nullable=True),
        sa.Column("last_login", sa.DateTime(timezone=True), nullable=True),
        sa.Column("is_active", sa.Boolean(), server_default=sa.text("true"), nullable=False),
        sa.Column("group_id", sa.Integer(), nullable=False),
        sa.Column("role_id", sa.Integer(), nullable=False),
        sa.Column("auth_info", postgresql.JSON(astext_type=sa.Text()), nullable=True),
        sa.Column("created_at", src.core.database.types.datetime.DateTimeTZ(timezone=True), nullable=False),
        sa.Column("updated_at", src.core.database.types.datetime.DateTimeTZ(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(["group_id"], ["group.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["role_id"], ["role.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("email"),
        sa.UniqueConstraint("phone"),
    )
    op.create_index(op.f("ix_user_created_at"), "user", ["created_at"], unique=False)
    op.create_index(op.f("ix_user_id"), "user", ["id"], unique=False)
    op.create_table(
        "vlan",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("vid", sa.Integer(), nullable=False),
        sa.Column("description", sa.String(), nullable=True),
        sa.Column("status", sqlalchemy_utils.types.choice.ChoiceType(length=255), nullable=False),
        sa.Column("ip_address", sa.String(), nullable=False),
        sa.Column("associated_interfaces", postgresql.ARRAY(sa.String(), dimensions=1), nullable=True),
        sa.Column("site_id", sa.Integer(), nullable=False),
        sa.Column("role_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(["role_id"], ["ip_role.id"], ondelete="SET NULL"),
        sa.ForeignKeyConstraint(["site_id"], ["site.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("site_id", "vid"),
    )
    op.create_index(op.f("ix_vlan_id"), "vlan", ["id"], unique=False)
    op.create_table(
        "asn_audit_log",
        sa.Column("parent_id", sa.Integer(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("created_at", src.core.database.types.datetime.DateTimeTZ(timezone=True), nullable=False),
        sa.Column("request_id", sa.String(), nullable=False),
        sa.Column("action", sa.String(), nullable=False),
        sa.Column("diff", sa.JSON(), nullable=True),
        sa.Column("user_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(["parent_id"], ["asn.id"], ondelete="SET NULL"),
        sa.ForeignKeyConstraint(["user_id"], ["user.id"], ondelete="SET NULL"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_asn_audit_log_id"), "asn_audit_log", ["id"], unique=False)
    op.create_table(
        "block_audit_log",
        sa.Column("parent_id", sa.Integer(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("created_at", src.core.database.types.datetime.DateTimeTZ(timezone=True), nullable=False),
        sa.Column("request_id", sa.String(), nullable=False),
        sa.Column("action", sa.String(), nullable=False),
        sa.Column("diff", sa.JSON(), nullable=True),
        sa.Column("user_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(["parent_id"], ["block.id"], ondelete="SET NULL"),
        sa.ForeignKeyConstraint(["user_id"], ["user.id"], ondelete="SET NULL"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_block_audit_log_id"), "block_audit_log", ["id"], unique=False)
    op.create_table(
        "contact_audit_log",
        sa.Column("parent_id", sa.Integer(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("created_at", src.core.database.types.datetime.DateTimeTZ(timezone=True), nullable=False),
        sa.Column("request_id", sa.String(), nullable=False),
        sa.Column("action", sa.String(), nullable=False),
        sa.Column("diff", sa.JSON(), nullable=True),
        sa.Column("user_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(["parent_id"], ["contact.id"], ondelete="SET NULL"),
        sa.ForeignKeyConstraint(["user_id"], ["user.id"], ondelete="SET NULL"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_contact_audit_log_id"), "contact_audit_log", ["id"], unique=False)
    op.create_table(
        "contact_role_audit_log",
        sa.Column("parent_id", sa.Integer(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("created_at", src.core.database.types.datetime.DateTimeTZ(timezone=True), nullable=False),
        sa.Column("request_id", sa.String(), nullable=False),
        sa.Column("action", sa.String(), nullable=False),
        sa.Column("diff", sa.JSON(), nullable=True),
        sa.Column("user_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(["parent_id"], ["contact_role.id"], ondelete="SET NULL"),
        sa.ForeignKeyConstraint(["user_id"], ["user.id"], ondelete="SET NULL"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_contact_role_audit_log_id"), "contact_role_audit_log", ["id"], unique=False)
    op.create_table(
        "device",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("management_ip", src.core.database.types.ipaddress.PgIpAddress(), nullable=False),
        sa.Column("oob_ip", src.core.database.types.ipaddress.PgIpAddress(), nullable=True),
        sa.Column("status", sqlalchemy_utils.types.choice.ChoiceType(length=255), nullable=False),
        sa.Column("version", sa.String(), nullable=True),
        sa.Column("comments", sa.String(), nullable=True),
        sa.Column("serial_number", sa.String(), nullable=True),
        sa.Column("asset_tag", sa.String(), nullable=True),
        sa.Column("position", sa.Integer(), nullable=True),
        sa.Column("device_type_id", sa.Integer(), nullable=False),
        sa.Column("device_role_id", sa.Integer(), nullable=False),
        sa.Column("platform_id", sa.Integer(), nullable=False, comment="redundant platform.id for query performance"),
        sa.Column(
            "manufacturer_id", sa.Integer(), nullable=False, comment="redundant manufacturer.id for query performance"
        ),
        sa.Column("site_id", sa.Integer(), nullable=False),
        sa.Column("location_id", sa.Integer(), nullable=True),
        sa.Column("associated_wac_ip", src.core.database.types.ipaddress.PgIpAddress(), nullable=True),
        sa.Column("ap_group", sa.String(), nullable=True),
        sa.Column("ap_mode", sqlalchemy_utils.types.choice.ChoiceType(length=255), nullable=True),
        sa.Column("created_at", src.core.database.types.datetime.DateTimeTZ(timezone=True), nullable=False),
        sa.Column("updated_at", src.core.database.types.datetime.DateTimeTZ(timezone=True), nullable=False),
        sa.Column("created_by_fk", sa.Integer(), nullable=True),
        sa.Column("updated_by_fk", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(["device_role_id"], ["device_role.id"], ondelete="RESTRICT"),
        sa.ForeignKeyConstraint(["device_type_id"], ["device_type.id"], ondelete="RESTRICT"),
        sa.ForeignKeyConstraint(["location_id"], ["location.id"], ondelete="SET NULL"),
        sa.ForeignKeyConstraint(["manufacturer_id"], ["manufacturer.id"], ondelete="RESTRICT"),
        sa.ForeignKeyConstraint(["platform_id"], ["platform.id"], ondelete="RESTRICT"),
        sa.ForeignKeyConstraint(["site_id"], ["site.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("serial_number"),
    )
    op.create_index(op.f("ix_device_created_at"), "device", ["created_at"], unique=False)
    op.create_index(op.f("ix_device_id"), "device", ["id"], unique=False)
    op.create_index(op.f("ix_device_management_ip"), "device", ["management_ip"], unique=False)
    op.create_index(op.f("ix_device_name"), "device", ["name"], unique=False)
    op.create_table(
        "ip_range_audit_log",
        sa.Column("parent_id", sa.Integer(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("created_at", src.core.database.types.datetime.DateTimeTZ(timezone=True), nullable=False),
        sa.Column("request_id", sa.String(), nullable=False),
        sa.Column("action", sa.String(), nullable=False),
        sa.Column("diff", sa.JSON(), nullable=True),
        sa.Column("user_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(["parent_id"], ["ip_range.id"], ondelete="SET NULL"),
        sa.ForeignKeyConstraint(["user_id"], ["user.id"], ondelete="SET NULL"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_ip_range_audit_log_id"), "ip_range_audit_log", ["id"], unique=False)
    op.create_table(
        "isp_audit_log",
        sa.Column("parent_id", sa.Integer(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("created_at", src.core.database.types.datetime.DateTimeTZ(timezone=True), nullable=False),
        sa.Column("request_id", sa.String(), nullable=False),
        sa.Column("action", sa.String(), nullable=False),
        sa.Column("diff", sa.JSON(), nullable=True),
        sa.Column("user_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(["parent_id"], ["isp.id"], ondelete="SET NULL"),
        sa.ForeignKeyConstraint(["user_id"], ["user.id"], ondelete="SET NULL"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_isp_audit_log_id"), "isp_audit_log", ["id"], unique=False)
    op.create_table(
        "location_audit_log",
        sa.Column("parent_id", sa.Integer(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("created_at", src.core.database.types.datetime.DateTimeTZ(timezone=True), nullable=False),
        sa.Column("request_id", sa.String(), nullable=False),
        sa.Column("action", sa.String(), nullable=False),
        sa.Column("diff", sa.JSON(), nullable=True),
        sa.Column("user_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(["parent_id"], ["location.id"], ondelete="SET NULL"),
        sa.ForeignKeyConstraint(["user_id"], ["user.id"], ondelete="SET NULL"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_location_audit_log_id"), "location_audit_log", ["id"], unique=False)
    op.create_table(
        "prefix",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("prefix", src.core.database.types.ipaddress.PgCIDR(), nullable=False),
        sa.Column("status", sqlalchemy_utils.types.choice.ChoiceType(length=255), nullable=False),
        sa.Column("is_dhcp_pool", sa.Boolean(), server_default=sa.text("true"), nullable=False),
        sa.Column("is_full", sa.Boolean(), server_default=sa.text("false"), nullable=False),
        sa.Column("vlan_id", sa.Integer(), nullable=True),
        sa.Column("site_id", sa.Integer(), nullable=True),
        sa.Column("role_id", sa.Integer(), nullable=True),
        sa.Column("vrf_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(["role_id"], ["ip_role.id"], ondelete="SET NULL"),
        sa.ForeignKeyConstraint(["site_id"], ["site.id"], ondelete="SET NULL"),
        sa.ForeignKeyConstraint(["vlan_id"], ["vlan.id"], ondelete="SET NULL"),
        sa.ForeignKeyConstraint(["vrf_id"], ["vrf.id"], ondelete="SET NULL"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_prefix_id"), "prefix", ["id"], unique=False)
    op.create_index(op.f("ix_prefix_prefix"), "prefix", ["prefix"], unique=True)
    op.create_table(
        "route_target_audit_log",
        sa.Column("parent_id", sa.Integer(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("created_at", src.core.database.types.datetime.DateTimeTZ(timezone=True), nullable=False),
        sa.Column("request_id", sa.String(), nullable=False),
        sa.Column("action", sa.String(), nullable=False),
        sa.Column("diff", sa.JSON(), nullable=True),
        sa.Column("user_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(["parent_id"], ["route_target.id"], ondelete="SET NULL"),
        sa.ForeignKeyConstraint(["user_id"], ["user.id"], ondelete="SET NULL"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_route_target_audit_log_id"), "route_target_audit_log", ["id"], unique=False)
    op.create_table(
        "site_audit_log",
        sa.Column("parent_id", sa.Integer(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("created_at", src.core.database.types.datetime.DateTimeTZ(timezone=True), nullable=False),
        sa.Column("request_id", sa.String(), nullable=False),
        sa.Column("action", sa.String(), nullable=False),
        sa.Column("diff", sa.JSON(), nullable=True),
        sa.Column("user_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(["parent_id"], ["site.id"], ondelete="SET NULL"),
        sa.ForeignKeyConstraint(["user_id"], ["user.id"], ondelete="SET NULL"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_site_audit_log_id"), "site_audit_log", ["id"], unique=False)
    op.create_table(
        "site_group_audit_log",
        sa.Column("parent_id", sa.Integer(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("created_at", src.core.database.types.datetime.DateTimeTZ(timezone=True), nullable=False),
        sa.Column("request_id", sa.String(), nullable=False),
        sa.Column("action", sa.String(), nullable=False),
        sa.Column("diff", sa.JSON(), nullable=True),
        sa.Column("user_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(["parent_id"], ["site_group.id"], ondelete="SET NULL"),
        sa.ForeignKeyConstraint(["user_id"], ["user.id"], ondelete="SET NULL"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_site_group_audit_log_id"), "site_group_audit_log", ["id"], unique=False)
    op.create_table(
        "vlan_audit_log",
        sa.Column("parent_id", sa.Integer(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("created_at", src.core.database.types.datetime.DateTimeTZ(timezone=True), nullable=False),
        sa.Column("request_id", sa.String(), nullable=False),
        sa.Column("action", sa.String(), nullable=False),
        sa.Column("diff", sa.JSON(), nullable=True),
        sa.Column("user_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(["parent_id"], ["vlan.id"], ondelete="SET NULL"),
        sa.ForeignKeyConstraint(["user_id"], ["user.id"], ondelete="SET NULL"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_vlan_audit_log_id"), "vlan_audit_log", ["id"], unique=False)
    op.create_table(
        "vrf_audit_log",
        sa.Column("parent_id", sa.Integer(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("created_at", src.core.database.types.datetime.DateTimeTZ(timezone=True), nullable=False),
        sa.Column("request_id", sa.String(), nullable=False),
        sa.Column("action", sa.String(), nullable=False),
        sa.Column("diff", sa.JSON(), nullable=True),
        sa.Column("user_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(["parent_id"], ["vrf.id"], ondelete="SET NULL"),
        sa.ForeignKeyConstraint(["user_id"], ["user.id"], ondelete="SET NULL"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_vrf_audit_log_id"), "vrf_audit_log", ["id"], unique=False)
    op.create_table(
        "auth_credential",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("cli", src.core.database.types.encrypted_string.EncryptedString(), nullable=True),
        sa.Column("snmpv2_community", src.core.database.types.encrypted_string.EncryptedString(), nullable=True),
        sa.Column("snmpv3", src.core.database.types.encrypted_string.EncryptedString(), nullable=True),
        sa.Column("http_read", src.core.database.types.encrypted_string.EncryptedString(), nullable=True),
        sa.Column("http_write", src.core.database.types.encrypted_string.EncryptedString(), nullable=True),
        sa.Column("site_group_id", sa.Integer(), nullable=True),
        sa.Column("site_id", sa.Integer(), nullable=True),
        sa.Column("device_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(["device_id"], ["device.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["site_group_id"], ["site_group.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["site_id"], ["site.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_auth_credential_id"), "auth_credential", ["id"], unique=False)
    op.create_table(
        "baseline_config",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("aaa_server", postgresql.ARRAY(sa.String(), dimensions=1), nullable=True),
        sa.Column("dhcp_server", postgresql.ARRAY(sa.String(), dimensions=1), nullable=True),
        sa.Column("dns_server", postgresql.ARRAY(sa.String(), dimensions=1), nullable=True),
        sa.Column("ntp_server", postgresql.ARRAY(sa.String(), dimensions=1), nullable=True),
        sa.Column("syslog_server", postgresql.ARRAY(sa.String(), dimensions=1), nullable=True),
        sa.Column("netflow_server", postgresql.ARRAY(sa.String(), dimensions=1), nullable=True),
        sa.Column("site_group_id", sa.Integer(), nullable=True),
        sa.Column("site_id", sa.Integer(), nullable=True),
        sa.Column("device_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(["device_id"], ["device.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["site_group_id"], ["site_group.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["site_id"], ["site.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_baseline_config_id"), "baseline_config", ["id"], unique=False)
    op.create_table(
        "device_audit_log",
        sa.Column("parent_id", sa.Integer(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("created_at", src.core.database.types.datetime.DateTimeTZ(timezone=True), nullable=False),
        sa.Column("request_id", sa.String(), nullable=False),
        sa.Column("action", sa.String(), nullable=False),
        sa.Column("diff", sa.JSON(), nullable=True),
        sa.Column("user_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(["parent_id"], ["device.id"], ondelete="SET NULL"),
        sa.ForeignKeyConstraint(["user_id"], ["user.id"], ondelete="SET NULL"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_device_audit_log_id"), "device_audit_log", ["id"], unique=False)
    op.create_table(
        "device_config",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("configuration", sa.TEXT(), nullable=False),
        sa.Column("total_lines", sa.Integer(), server_default="0", nullable=False),
        sa.Column("lines_added", sa.Integer(), server_default="0", nullable=False),
        sa.Column("lines_deleted", sa.Integer(), server_default="0", nullable=False),
        sa.Column("lines_updated", sa.Integer(), server_default="0", nullable=False),
        sa.Column("md5_checksum", sa.String(), nullable=True),
        sa.Column("created_by", sa.String(), nullable=False),
        sa.Column("created_at", src.core.database.types.datetime.DateTimeTZ(timezone=True), nullable=False),
        sa.Column("change_event", postgresql.JSON(astext_type=sa.Text()), nullable=True),
        sa.Column("device_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(["device_id"], ["device.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_device_config_id"), "device_config", ["id"], unique=False)
    op.create_table(
        "equipment",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("eq_type", sqlalchemy_utils.types.choice.ChoiceType(length=255), nullable=False),
        sa.Column("description", sa.String(), nullable=True),
        sa.Column("device_type", sa.String(), nullable=True),
        sa.Column("serial_number", sa.String(), nullable=True),
        sa.Column("device_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(["device_id"], ["device.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_equipment_id"), "equipment", ["id"], unique=False)
    op.create_table(
        "interface",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("description", sa.String(), nullable=True),
        sa.Column("if_index", sa.Integer(), nullable=True),
        sa.Column("speed", sa.Integer(), nullable=True),
        sa.Column("mode", sa.String(), nullable=False),
        sa.Column("interface_type", sa.String(), nullable=True),
        sa.Column("mtu", sa.Integer(), nullable=True),
        sa.Column("admin_status", sqlalchemy_utils.types.choice.ChoiceType(length=255), nullable=False),
        sa.Column("device_id", sa.Integer(), nullable=False),
        sa.Column("vlan_id", sa.Integer(), nullable=True),
        sa.Column("created_at", src.core.database.types.datetime.DateTimeTZ(timezone=True), nullable=False),
        sa.Column("updated_at", src.core.database.types.datetime.DateTimeTZ(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(["device_id"], ["device.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["vlan_id"], ["vlan.id"], ondelete="SET NULL"),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("device_id", "name"),
    )
    op.create_index(op.f("ix_interface_created_at"), "interface", ["created_at"], unique=False)
    op.create_table(
        "module",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("description", sa.String(), nullable=True),
        sa.Column("serial_number", sa.String(), nullable=True),
        sa.Column("part_number", sa.String(), nullable=True),
        sa.Column("hardware_version", sa.String(), nullable=True),
        sa.Column("physical_index", sa.Integer(), nullable=True),
        sa.Column("replaceable", sa.Boolean(), nullable=True),
        sa.Column("device_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(["device_id"], ["device.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("serial_number"),
    )
    op.create_index(op.f("ix_module_id"), "module", ["id"], unique=False)
    op.create_table(
        "prefix_audit_log",
        sa.Column("parent_id", sa.Integer(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("created_at", src.core.database.types.datetime.DateTimeTZ(timezone=True), nullable=False),
        sa.Column("request_id", sa.String(), nullable=False),
        sa.Column("action", sa.String(), nullable=False),
        sa.Column("diff", sa.JSON(), nullable=True),
        sa.Column("user_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(["parent_id"], ["prefix.id"], ondelete="SET NULL"),
        sa.ForeignKeyConstraint(["user_id"], ["user.id"], ondelete="SET NULL"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_prefix_audit_log_id"), "prefix_audit_log", ["id"], unique=False)
    op.create_table(
        "stack",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("role", sa.String(), nullable=False),
        sa.Column("mac_address", sa.String(), nullable=True),
        sa.Column("priority", sa.Integer(), nullable=True),
        sa.Column("device_type", sa.String(), nullable=False),
        sa.Column("device_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(["device_id"], ["device.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_stack_id"), "stack", ["id"], unique=False)
    op.create_table(
        "auth_credential_audit_log",
        sa.Column("parent_id", sa.Integer(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("created_at", src.core.database.types.datetime.DateTimeTZ(timezone=True), nullable=False),
        sa.Column("request_id", sa.String(), nullable=False),
        sa.Column("action", sa.String(), nullable=False),
        sa.Column("diff", sa.JSON(), nullable=True),
        sa.Column("user_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(["parent_id"], ["auth_credential.id"], ondelete="SET NULL"),
        sa.ForeignKeyConstraint(["user_id"], ["user.id"], ondelete="SET NULL"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_auth_credential_audit_log_id"), "auth_credential_audit_log", ["id"], unique=False)
    op.create_table(
        "baseline_config_audit_log",
        sa.Column("parent_id", sa.Integer(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("created_at", src.core.database.types.datetime.DateTimeTZ(timezone=True), nullable=False),
        sa.Column("request_id", sa.String(), nullable=False),
        sa.Column("action", sa.String(), nullable=False),
        sa.Column("diff", sa.JSON(), nullable=True),
        sa.Column("user_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(["parent_id"], ["baseline_config.id"], ondelete="SET NULL"),
        sa.ForeignKeyConstraint(["user_id"], ["user.id"], ondelete="SET NULL"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_baseline_config_audit_log_id"), "baseline_config_audit_log", ["id"], unique=False)
    op.create_table(
        "circuit",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("cid", sa.String(), nullable=True),
        sa.Column("status", sqlalchemy_utils.types.choice.ChoiceType(length=255), nullable=False),
        sa.Column("install_date", sa.Date(), nullable=True),
        sa.Column("purchase_term", sa.String(), nullable=True),
        sa.Column("bandwidth", sa.Integer(), nullable=False, comment="Mbps"),
        sa.Column("comments", sa.String(), nullable=True),
        sa.Column(
            "manufacturer_available_ip",
            postgresql.ARRAY(src.core.database.types.ipaddress.PgIpInterface()),
            nullable=True,
        ),
        sa.Column(
            "manufacturer_available_gateway",
            postgresql.ARRAY(src.core.database.types.ipaddress.PgIpAddress()),
            nullable=True,
        ),
        sa.Column("isp_id", sa.Integer(), nullable=False),
        sa.Column("circuit_type_id", sa.Integer(), nullable=False),
        sa.Column("site_a_id", sa.Integer(), nullable=False),
        sa.Column("device_a_id", sa.Integer(), nullable=False),
        sa.Column("interface_a_id", sa.Integer(), nullable=False),
        sa.Column("site_z_id", sa.Integer(), nullable=True),
        sa.Column("device_z_id", sa.Integer(), nullable=True),
        sa.Column("interface_z_id", sa.Integer(), nullable=True),
        sa.Column("created_at", src.core.database.types.datetime.DateTimeTZ(timezone=True), nullable=False),
        sa.Column("updated_at", src.core.database.types.datetime.DateTimeTZ(timezone=True), nullable=False),
        sa.Column("created_by_fk", sa.Integer(), nullable=True),
        sa.Column("updated_by_fk", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(["circuit_type_id"], ["circuit_type.id"], ondelete="RESTRICT"),
        sa.ForeignKeyConstraint(["device_a_id"], ["device.id"], ondelete="RESTRICT"),
        sa.ForeignKeyConstraint(["device_z_id"], ["device.id"], ondelete="RESTRICT"),
        sa.ForeignKeyConstraint(["interface_a_id"], ["interface.id"], ondelete="SET NULL"),
        sa.ForeignKeyConstraint(["interface_z_id"], ["interface.id"], ondelete="SET NULL"),
        sa.ForeignKeyConstraint(["isp_id"], ["isp.id"], ondelete="RESTRICT"),
        sa.ForeignKeyConstraint(["site_a_id"], ["site.id"], ondelete="RESTRICT"),
        sa.ForeignKeyConstraint(["site_z_id"], ["site.id"], ondelete="RESTRICT"),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("cid"),
        sa.UniqueConstraint("name"),
    )
    op.create_index(op.f("ix_circuit_created_at"), "circuit", ["created_at"], unique=False)
    op.create_index(op.f("ix_circuit_id"), "circuit", ["id"], unique=False)
    op.create_table(
        "ip_address",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("address", src.core.database.types.ipaddress.PgIpInterface(), nullable=False),
        sa.Column("vrf_id", sa.Integer(), nullable=True),
        sa.Column("version", sa.Integer(), nullable=False),
        sa.Column("status", sqlalchemy_utils.types.choice.ChoiceType(length=255), nullable=False),
        sa.Column("dns_name", sa.String(), nullable=True),
        sa.Column("description", sa.String(), nullable=True),
        sa.Column("interface_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(["interface_id"], ["interface.id"], ondelete="SET NULL"),
        sa.ForeignKeyConstraint(["vrf_id"], ["vrf.id"], ondelete="SET NULL"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_ip_address_id"), "ip_address", ["id"], unique=False)
    op.create_table(
        "lldp_neighbor",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("source_interface_id", sa.Integer(), nullable=False),
        sa.Column("source_device_id", sa.Integer(), nullable=False),
        sa.Column("target_interface_id", sa.Integer(), nullable=False),
        sa.Column("target_device_id", sa.Integer(), nullable=False),
        sa.Column("link_status", sa.String(), nullable=True),
        sa.Column("created_at", src.core.database.types.datetime.DateTimeTZ(timezone=True), nullable=False),
        sa.Column("updated_at", src.core.database.types.datetime.DateTimeTZ(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(["source_device_id"], ["device.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["source_interface_id"], ["interface.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["target_device_id"], ["device.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["target_interface_id"], ["interface.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_lldp_neighbor_created_at"), "lldp_neighbor", ["created_at"], unique=False)
    op.create_index(op.f("ix_lldp_neighbor_id"), "lldp_neighbor", ["id"], unique=False)
    op.create_table(
        "circuit_audit_log",
        sa.Column("parent_id", sa.Integer(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("created_at", src.core.database.types.datetime.DateTimeTZ(timezone=True), nullable=False),
        sa.Column("request_id", sa.String(), nullable=False),
        sa.Column("action", sa.String(), nullable=False),
        sa.Column("diff", sa.JSON(), nullable=True),
        sa.Column("user_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(["parent_id"], ["circuit.id"], ondelete="SET NULL"),
        sa.ForeignKeyConstraint(["user_id"], ["user.id"], ondelete="SET NULL"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_circuit_audit_log_id"), "circuit_audit_log", ["id"], unique=False)
    op.create_table(
        "circuit_contact",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("contact_id", sa.Integer(), nullable=False),
        sa.Column("circuit_id", sa.Integer(), nullable=False),
        sa.Column("contact_role_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(["circuit_id"], ["circuit.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["contact_id"], ["contact.id"], ondelete="RESTRICT"),
        sa.ForeignKeyConstraint(["contact_role_id"], ["contact_role.id"], ondelete="RESTRICT"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_circuit_contact_id"), "circuit_contact", ["id"], unique=False)
    op.create_table(
        "ip_address_audit_log",
        sa.Column("parent_id", sa.Integer(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("created_at", src.core.database.types.datetime.DateTimeTZ(timezone=True), nullable=False),
        sa.Column("request_id", sa.String(), nullable=False),
        sa.Column("action", sa.String(), nullable=False),
        sa.Column("diff", sa.JSON(), nullable=True),
        sa.Column("user_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(["parent_id"], ["ip_address.id"], ondelete="SET NULL"),
        sa.ForeignKeyConstraint(["user_id"], ["user.id"], ondelete="SET NULL"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_ip_address_audit_log_id"), "ip_address_audit_log", ["id"], unique=False)
    op.create_table(
        "ip_address_user",
        sa.Column("ip_address_id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(["ip_address_id"], ["ip_address.id"]),
        sa.ForeignKeyConstraint(["user_id"], ["user.id"]),
        sa.PrimaryKeyConstraint("ip_address_id", "user_id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("ip_address_user")
    op.drop_index(op.f("ix_ip_address_audit_log_id"), table_name="ip_address_audit_log")
    op.drop_table("ip_address_audit_log")
    op.drop_index(op.f("ix_circuit_contact_id"), table_name="circuit_contact")
    op.drop_table("circuit_contact")
    op.drop_index(op.f("ix_circuit_audit_log_id"), table_name="circuit_audit_log")
    op.drop_table("circuit_audit_log")
    op.drop_index(op.f("ix_lldp_neighbor_id"), table_name="lldp_neighbor")
    op.drop_index(op.f("ix_lldp_neighbor_created_at"), table_name="lldp_neighbor")
    op.drop_table("lldp_neighbor")
    op.drop_index(op.f("ix_ip_address_id"), table_name="ip_address")
    op.drop_table("ip_address")
    op.drop_index(op.f("ix_circuit_id"), table_name="circuit")
    op.drop_index(op.f("ix_circuit_created_at"), table_name="circuit")
    op.drop_table("circuit")
    op.drop_index(op.f("ix_baseline_config_audit_log_id"), table_name="baseline_config_audit_log")
    op.drop_table("baseline_config_audit_log")
    op.drop_index(op.f("ix_auth_credential_audit_log_id"), table_name="auth_credential_audit_log")
    op.drop_table("auth_credential_audit_log")
    op.drop_index(op.f("ix_stack_id"), table_name="stack")
    op.drop_table("stack")
    op.drop_index(op.f("ix_prefix_audit_log_id"), table_name="prefix_audit_log")
    op.drop_table("prefix_audit_log")
    op.drop_index(op.f("ix_module_id"), table_name="module")
    op.drop_table("module")
    op.drop_index(op.f("ix_interface_created_at"), table_name="interface")
    op.drop_table("interface")
    op.drop_index(op.f("ix_equipment_id"), table_name="equipment")
    op.drop_table("equipment")
    op.drop_index(op.f("ix_device_config_id"), table_name="device_config")
    op.drop_table("device_config")
    op.drop_index(op.f("ix_device_audit_log_id"), table_name="device_audit_log")
    op.drop_table("device_audit_log")
    op.drop_index(op.f("ix_baseline_config_id"), table_name="baseline_config")
    op.drop_table("baseline_config")
    op.drop_index(op.f("ix_auth_credential_id"), table_name="auth_credential")
    op.drop_table("auth_credential")
    op.drop_index(op.f("ix_vrf_audit_log_id"), table_name="vrf_audit_log")
    op.drop_table("vrf_audit_log")
    op.drop_index(op.f("ix_vlan_audit_log_id"), table_name="vlan_audit_log")
    op.drop_table("vlan_audit_log")
    op.drop_index(op.f("ix_site_group_audit_log_id"), table_name="site_group_audit_log")
    op.drop_table("site_group_audit_log")
    op.drop_index(op.f("ix_site_audit_log_id"), table_name="site_audit_log")
    op.drop_table("site_audit_log")
    op.drop_index(op.f("ix_route_target_audit_log_id"), table_name="route_target_audit_log")
    op.drop_table("route_target_audit_log")
    op.drop_index(op.f("ix_prefix_prefix"), table_name="prefix")
    op.drop_index(op.f("ix_prefix_id"), table_name="prefix")
    op.drop_table("prefix")
    op.drop_index(op.f("ix_location_audit_log_id"), table_name="location_audit_log")
    op.drop_table("location_audit_log")
    op.drop_index(op.f("ix_isp_audit_log_id"), table_name="isp_audit_log")
    op.drop_table("isp_audit_log")
    op.drop_index(op.f("ix_ip_range_audit_log_id"), table_name="ip_range_audit_log")
    op.drop_table("ip_range_audit_log")
    op.drop_index(op.f("ix_device_name"), table_name="device")
    op.drop_index(op.f("ix_device_management_ip"), table_name="device")
    op.drop_index(op.f("ix_device_id"), table_name="device")
    op.drop_index(op.f("ix_device_created_at"), table_name="device")
    op.drop_table("device")
    op.drop_index(op.f("ix_contact_role_audit_log_id"), table_name="contact_role_audit_log")
    op.drop_table("contact_role_audit_log")
    op.drop_index(op.f("ix_contact_audit_log_id"), table_name="contact_audit_log")
    op.drop_table("contact_audit_log")
    op.drop_index(op.f("ix_block_audit_log_id"), table_name="block_audit_log")
    op.drop_table("block_audit_log")
    op.drop_index(op.f("ix_asn_audit_log_id"), table_name="asn_audit_log")
    op.drop_table("asn_audit_log")
    op.drop_index(op.f("ix_vlan_id"), table_name="vlan")
    op.drop_table("vlan")
    op.drop_index(op.f("ix_user_id"), table_name="user")
    op.drop_index(op.f("ix_user_created_at"), table_name="user")
    op.drop_table("user")
    op.drop_index(op.f("ix_site_contact_id"), table_name="site_contact")
    op.drop_table("site_contact")
    op.drop_table("site_asn")
    op.drop_table("location")
    op.drop_index(op.f("ix_vrf_route_target_id"), table_name="vrf_route_target")
    op.drop_table("vrf_route_target")
    op.drop_index(op.f("ix_textfsm_template_id"), table_name="textfsm_template")
    op.drop_table("textfsm_template")
    op.drop_index(op.f("ix_site_site_code"), table_name="site")
    op.drop_index(op.f("ix_site_id"), table_name="site")
    op.drop_table("site")
    op.drop_table("role_permission")
    op.drop_table("role_menu")
    op.drop_index(op.f("ix_jinja_template_id"), table_name="jinja_template")
    op.drop_table("jinja_template")
    op.drop_table("isp_asn")
    op.drop_index(op.f("ix_ip_range_id"), table_name="ip_range")
    op.drop_table("ip_range")
    op.drop_index(op.f("ix_group_id"), table_name="group")
    op.drop_index(op.f("ix_group_created_at"), table_name="group")
    op.drop_table("group")
    op.drop_index(op.f("ix_device_type_id"), table_name="device_type")
    op.drop_index(op.f("ix_device_type_created_at"), table_name="device_type")
    op.drop_table("device_type")
    op.drop_index(op.f("ix_wlan_config_id"), table_name="wlan_config")
    op.drop_table("wlan_config")
    op.drop_index(op.f("ix_vrf_id"), table_name="vrf")
    op.drop_table("vrf")
    op.drop_table("site_group")
    op.drop_index(op.f("ix_route_target_id"), table_name="route_target")
    op.drop_table("route_target")
    op.drop_index(op.f("ix_role_id"), table_name="role")
    op.drop_index(op.f("ix_role_created_at"), table_name="role")
    op.drop_table("role")
    op.drop_index(op.f("ix_platform_id"), table_name="platform")
    op.drop_index(op.f("ix_platform_created_at"), table_name="platform")
    op.drop_table("platform")
    op.drop_index(op.f("ix_permission_id"), table_name="permission")
    op.drop_table("permission")
    op.drop_table("menu")
    op.drop_index(op.f("ix_manufacturer_id"), table_name="manufacturer")
    op.drop_index(op.f("ix_manufacturer_created_at"), table_name="manufacturer")
    op.drop_table("manufacturer")
    op.drop_index(op.f("ix_isp_id"), table_name="isp")
    op.drop_index(op.f("ix_isp_created_at"), table_name="isp")
    op.drop_table("isp")
    op.drop_index(op.f("ix_ip_role_id"), table_name="ip_role")
    op.drop_index(op.f("ix_ip_role_created_at"), table_name="ip_role")
    op.drop_table("ip_role")
    op.drop_index(op.f("ix_device_role_id"), table_name="device_role")
    op.drop_index(op.f("ix_device_role_created_at"), table_name="device_role")
    op.drop_table("device_role")
    op.drop_index(op.f("ix_contact_role_id"), table_name="contact_role")
    op.drop_table("contact_role")
    op.drop_index(op.f("ix_contact_id"), table_name="contact")
    op.drop_table("contact")
    op.drop_index(op.f("ix_circuit_type_id"), table_name="circuit_type")
    op.drop_index(op.f("ix_circuit_type_created_at"), table_name="circuit_type")
    op.drop_table("circuit_type")
    op.drop_index(op.f("ix_block_id"), table_name="block")
    op.drop_table("block")
    op.drop_index(op.f("ix_asn_id"), table_name="asn")
    op.drop_table("asn")
    # ### end Alembic commands ###
