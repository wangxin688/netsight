from typing import Protocol, TypeVar

SessionT = TypeVar("SessionT")


class NettyFactory(Protocol):
    def get_session(self) -> SessionT: ...

    def close(self) -> None: ...

    def get_hostname(self) -> str: ...

    def get_manufacturer(self) -> str: ...

    def get_serial_number(self) -> str: ...

    def get_software_version(self) -> str: ...

    def get_device_type(self) -> str: ...

    def get_modules(self) -> list[str]: ...

    def get_stacks(self) -> list[str]: ...

    def get_interfaces(self) -> list[str]: ...

    def get_lldp_neighbors(self) -> list[str]: ...

    def get_arp_table(self) -> list[str]: ...

    def get_mac_table(self) -> list[str]: ...

    def get_ospf_neighbors(self) -> list[str]: ...

    def get_bgp_neighbors(self) -> list[str]: ...

    def get_ntp_servers(self) -> list[str]: ...

    def get_interfaces_ip(self) -> str: ...

    def get_interfaces_vlans(self) -> list[str]: ...

    def get_routing_table(self) -> list[str]: ...


class NettySshFactory(NettyFactory):
    def ping(self) -> None: ...

    def traceroute(self) -> None: ...

    def get_running_config(self) -> None: ...

    def get_startup_config(self) -> None: ...


class NettySnmpFactory(NettyFactory): ...
