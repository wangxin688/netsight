"""init db

Revision ID: 6d6e764d14da
Revises: 
Create Date: 2024-02-02 18:20:20.343187

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlalchemy_utils
from sqlalchemy.dialects import postgresql

import src
from src.consts import (
    CircuitStatus,
    DeviceStatus,
    EntityPhysicalClass,
    InterfaceAdminStatus,
    LocationStatus,
    LocationType,
    RackStatus,
    SiteStatus,
    IPRangeStatus,
    IPAddressStatus,
    PrefixStatus,
    VLANStatus
)

# revision identifiers, used by Alembic.
revision: str = '6d6e764d14da'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('asn',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('asn', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('asn')
    )
    op.create_index(op.f('ix_asn_created_at'), 'asn', ['created_at'], unique=False)
    op.create_table('block',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('block', postgresql.CIDR(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('block')
    )
    op.create_index(op.f('ix_block_created_at'), 'block', ['created_at'], unique=False)
    op.create_table('circuit_type',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', postgresql.HSTORE(text_type=sa.Text()), nullable=False),
    sa.Column('slug', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name'),
    sa.UniqueConstraint('slug')
    )
    op.create_index(op.f('ix_circuit_type_created_at'), 'circuit_type', ['created_at'], unique=False)
    op.create_table('contact',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('avatar', sa.String(), nullable=True),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('phone', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_contact_created_at'), 'contact', ['created_at'], unique=False)
    op.create_table('contact_role',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_contact_role_created_at'), 'contact_role', ['created_at'], unique=False)
    op.create_table('device_group',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_device_group_created_at'), 'device_group', ['created_at'], unique=False)
    op.create_table('device_role',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', postgresql.HSTORE(text_type=sa.Text()), nullable=False),
    sa.Column('slug', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name'),
    sa.UniqueConstraint('slug')
    )
    op.create_index(op.f('ix_device_role_created_at'), 'device_role', ['created_at'], unique=False)
    op.create_table('ip_role',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', postgresql.HSTORE(text_type=sa.Text()), nullable=False),
    sa.Column('slug', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name'),
    sa.UniqueConstraint('slug')
    )
    op.create_index(op.f('ix_ip_role_created_at'), 'ip_role', ['created_at'], unique=False)
    op.create_table('isp',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', postgresql.HSTORE(text_type=sa.Text()), nullable=False),
    sa.Column('slug', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('account', sa.String(), nullable=True),
    sa.Column('portal', sa.String(), nullable=True),
    sa.Column('noc_contact', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('admin_contact', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('comments', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name'),
    sa.UniqueConstraint('slug')
    )
    op.create_index(op.f('ix_isp_created_at'), 'isp', ['created_at'], unique=False)
    op.create_table('menu',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False, comment='the unique name of route'),
    sa.Column('hidden', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('redirect', sa.String(), nullable=False, comment='redirect url for the route'),
    sa.Column('hideChildrenInMenu', sa.Boolean(), server_default=sa.text('false'), nullable=False, comment='hide children in menu force or not'),
    sa.Column('order', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(), nullable=False, comment='the title of the route, 面包屑'),
    sa.Column('icon', sa.String(), nullable=True),
    sa.Column('keepAlive', sa.Boolean(), server_default=sa.text('false'), nullable=False, comment='cache route, 开启multi-tab时为true'),
    sa.Column('hiddenHeaderContent', sa.Boolean(), server_default=sa.text('false'), nullable=False, comment='隐藏pageheader页面带的面包屑和标题栏'),
    sa.Column('permission', postgresql.ARRAY(sa.Integer(), dimensions=1), nullable=True),
    sa.Column('parent_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['parent_id'], ['menu.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('permission',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('url', sa.String(), nullable=False),
    sa.Column('method', sa.String(), nullable=False),
    sa.Column('tag', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('platform',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('slug', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('netmiko_driver', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name'),
    sa.UniqueConstraint('slug')
    )
    op.create_index(op.f('ix_platform_created_at'), 'platform', ['created_at'], unique=False)
    op.create_table('rack_role',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', postgresql.HSTORE(text_type=sa.Text()), nullable=False),
    sa.Column('slug', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name'),
    sa.UniqueConstraint('slug')
    )
    op.create_index(op.f('ix_rack_role_created_at'), 'rack_role', ['created_at'], unique=False)
    op.create_table('role',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('slug', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_role_created_at'), 'role', ['created_at'], unique=False)
    op.create_table('route_target',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_route_target_created_at'), 'route_target', ['created_at'], unique=False)
    op.create_table('site_group',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('slug', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name'),
    sa.UniqueConstraint('slug')
    )
    op.create_index(op.f('ix_site_group_created_at'), 'site_group', ['created_at'], unique=False)
    op.create_table('vendor',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', postgresql.HSTORE(text_type=sa.Text()), nullable=False),
    sa.Column('slug', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name'),
    sa.UniqueConstraint('slug')
    )
    op.create_index(op.f('ix_vendor_created_at'), 'vendor', ['created_at'], unique=False)
    op.create_table('vrf',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('rd', sa.String(), nullable=False),
    sa.Column('enforce_unique', sa.Boolean(), server_default=sa.text('true'), nullable=False, comment='Enforce unique space, prevent duplicate IP/prefix'),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name'),
    sa.UniqueConstraint('rd')
    )
    op.create_index(op.f('ix_vrf_created_at'), 'vrf', ['created_at'], unique=False)
    op.create_table('wlan_config',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('device_type',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('snmp_sysobjectid', sa.String(), nullable=False),
    sa.Column('u_height', sa.Float(), server_default='1.0', nullable=False),
    sa.Column('front_image', sa.String(), nullable=True),
    sa.Column('rear_image', sa.String(), nullable=True),
    sa.Column('vendor_id', sa.Integer(), nullable=False),
    sa.Column('platform_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['platform_id'], ['platform.id'], ondelete='RESTRICT'),
    sa.ForeignKeyConstraint(['vendor_id'], ['vendor.id'], ondelete='RESTRICT'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name'),
    sa.UniqueConstraint('vendor_id', 'name')
    )
    op.create_index(op.f('ix_device_type_created_at'), 'device_type', ['created_at'], unique=False)
    op.create_table('group',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['role_id'], ['role.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_group_created_at'), 'group', ['created_at'], unique=False)
    op.create_table('ip_range',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('start_address', postgresql.INET(), nullable=False),
    sa.Column('end_address', postgresql.INET(), nullable=False),
    sa.Column('status', sqlalchemy_utils.types.choice.ChoiceType(IPRangeStatus), nullable=False),
    sa.Column('size', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('vrf_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['vrf_id'], ['vrf.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_ip_range_created_at'), 'ip_range', ['created_at'], unique=False)
    op.create_table('isp_asn',
    sa.Column('isp_id', sa.Integer(), nullable=False),
    sa.Column('asn_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['asn_id'], ['asn.id'], ),
    sa.ForeignKeyConstraint(['isp_id'], ['isp.id'], ),
    sa.PrimaryKeyConstraint('isp_id', 'asn_id')
    )
    op.create_table('jinja_template',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('platform_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['platform_id'], ['platform.id'], ondelete='RESTRICT'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('role_menu',
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.Column('menu_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['menu_id'], ['menu.id'], ),
    sa.ForeignKeyConstraint(['role_id'], ['role.id'], ),
    sa.PrimaryKeyConstraint('role_id', 'menu_id')
    )
    op.create_table('role_permission',
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.Column('permission_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['permission_id'], ['permission.id'], ),
    sa.ForeignKeyConstraint(['role_id'], ['role.id'], ),
    sa.PrimaryKeyConstraint('role_id', 'permission_id')
    )
    op.create_table('site',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('site_code', sa.String(), nullable=False),
    sa.Column('status', sqlalchemy_utils.types.choice.ChoiceType(SiteStatus), nullable=False),
    sa.Column('facility_code', sa.String(), nullable=True),
    sa.Column('time_zone', sa.String(), nullable=True),
    sa.Column('country', sa.String(), nullable=True),
    sa.Column('city', sa.String(), nullable=True),
    sa.Column('address', sa.String(), nullable=False),
    sa.Column('latitude', sa.Float(), nullable=False),
    sa.Column('longitude', sa.Float(), nullable=False),
    sa.Column('classification', sa.String(), nullable=True),
    sa.Column('comments', sa.String(), nullable=True),
    sa.Column('site_group_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['site_group_id'], ['site_group.id'], ondelete='RESTRICT'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_site_created_at'), 'site', ['created_at'], unique=False)
    op.create_index(op.f('ix_site_site_code'), 'site', ['site_code'], unique=True)
    op.create_table('textfsm_template',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('commonad', sa.String(), nullable=False),
    sa.Column('platform_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['platform_id'], ['platform.id'], ondelete='RESTRICT'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('vrf_route_target',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('vrf_id', sa.Integer(), nullable=False),
    sa.Column('route_target_id', sa.Integer(), nullable=False),
    sa.Column('target', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['route_target_id'], ['route_target.id'], ),
    sa.ForeignKeyConstraint(['vrf_id'], ['vrf.id'], ),
    sa.PrimaryKeyConstraint('id', 'vrf_id', 'route_target_id')
    )
    op.create_table('location',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('location_type', sqlalchemy_utils.types.choice.ChoiceType(LocationType), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('status', sqlalchemy_utils.types.choice.ChoiceType(LocationStatus), nullable=False),
    sa.Column('site_id', sa.Integer(), nullable=False),
    sa.Column('parent_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['parent_id'], ['location.id'], ),
    sa.ForeignKeyConstraint(['site_id'], ['site.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('site_id', 'name')
    )
    op.create_index(op.f('ix_location_created_at'), 'location', ['created_at'], unique=False)
    op.create_table('site_asn',
    sa.Column('site_id', sa.Integer(), nullable=False),
    sa.Column('asn_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['asn_id'], ['asn.id'], ),
    sa.ForeignKeyConstraint(['site_id'], ['site.id'], ),
    sa.PrimaryKeyConstraint('site_id', 'asn_id')
    )
    op.create_table('site_contact',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('contact_id', sa.Integer(), nullable=False),
    sa.Column('site_id', sa.Integer(), nullable=False),
    sa.Column('contact_role_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['contact_id'], ['contact.id'], ondelete='RESTRICT'),
    sa.ForeignKeyConstraint(['contact_role_id'], ['contact_role.id'], ondelete='RESTRICT'),
    sa.ForeignKeyConstraint(['site_id'], ['site.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('phone', sa.String(), nullable=True),
    sa.Column('password', sa.String(), nullable=False),
    sa.Column('avatar', sa.String(), nullable=True),
    sa.Column('last_login', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_active', sa.Boolean(), server_default=sa.text('true'), nullable=False),
    sa.Column('group_id', sa.Integer(), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.Column('auth_info', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['group_id'], ['group.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['role_id'], ['role.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('phone')
    )
    op.create_index(op.f('ix_user_created_at'), 'user', ['created_at'], unique=False)
    op.create_table('vlan',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('vid', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('status', sqlalchemy_utils.types.choice.ChoiceType(VLANStatus), nullable=False),
    sa.Column('site_id', sa.Integer(), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['role_id'], ['ip_role.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['site_id'], ['site.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('site_id', 'vid')
    )
    op.create_index(op.f('ix_vlan_created_at'), 'vlan', ['created_at'], unique=False)
    op.create_table('asn_audit_log',
    sa.Column('parent_id', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('request_id', sa.String(), nullable=False),
    sa.Column('action', sa.String(), nullable=False),
    sa.Column('diff', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['parent_id'], ['asn.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('block_audit_log',
    sa.Column('parent_id', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('request_id', sa.String(), nullable=False),
    sa.Column('action', sa.String(), nullable=False),
    sa.Column('diff', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['parent_id'], ['block.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('circuit_type_audit_log',
    sa.Column('parent_id', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('request_id', sa.String(), nullable=False),
    sa.Column('action', sa.String(), nullable=False),
    sa.Column('diff', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['parent_id'], ['circuit_type.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('contact_audit_log',
    sa.Column('parent_id', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('request_id', sa.String(), nullable=False),
    sa.Column('action', sa.String(), nullable=False),
    sa.Column('diff', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['parent_id'], ['contact.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('contact_role_audit_log',
    sa.Column('parent_id', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('request_id', sa.String(), nullable=False),
    sa.Column('action', sa.String(), nullable=False),
    sa.Column('diff', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['parent_id'], ['contact_role.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('device_group_audit_log',
    sa.Column('parent_id', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('request_id', sa.String(), nullable=False),
    sa.Column('action', sa.String(), nullable=False),
    sa.Column('diff', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['parent_id'], ['device_group.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('device_role_audit_log',
    sa.Column('parent_id', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('request_id', sa.String(), nullable=False),
    sa.Column('action', sa.String(), nullable=False),
    sa.Column('diff', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['parent_id'], ['device_role.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('device_type_audit_log',
    sa.Column('parent_id', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('request_id', sa.String(), nullable=False),
    sa.Column('action', sa.String(), nullable=False),
    sa.Column('diff', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['parent_id'], ['device_type.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('ip_range_audit_log',
    sa.Column('parent_id', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('request_id', sa.String(), nullable=False),
    sa.Column('action', sa.String(), nullable=False),
    sa.Column('diff', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['parent_id'], ['ip_range.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('ip_role_audit_log',
    sa.Column('parent_id', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('request_id', sa.String(), nullable=False),
    sa.Column('action', sa.String(), nullable=False),
    sa.Column('diff', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['parent_id'], ['ip_role.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('isp_audit_log',
    sa.Column('parent_id', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('request_id', sa.String(), nullable=False),
    sa.Column('action', sa.String(), nullable=False),
    sa.Column('diff', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['parent_id'], ['isp.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('location_audit_log',
    sa.Column('parent_id', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('request_id', sa.String(), nullable=False),
    sa.Column('action', sa.String(), nullable=False),
    sa.Column('diff', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['parent_id'], ['location.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('platform_audit_log',
    sa.Column('parent_id', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('request_id', sa.String(), nullable=False),
    sa.Column('action', sa.String(), nullable=False),
    sa.Column('diff', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['parent_id'], ['platform.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('prefix',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('prefix', postgresql.CIDR(), nullable=False),
    sa.Column('status', sqlalchemy_utils.types.choice.ChoiceType(PrefixStatus), nullable=False),
    sa.Column('is_dhcp_pool', sa.Boolean(), server_default=sa.text('true'), nullable=False),
    sa.Column('is_full', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('vlan_id', sa.Integer(), nullable=True),
    sa.Column('site_id', sa.Integer(), nullable=True),
    sa.Column('role_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['role_id'], ['ip_role.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['site_id'], ['site.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['vlan_id'], ['vlan.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('prefix')
    )
    op.create_index(op.f('ix_prefix_created_at'), 'prefix', ['created_at'], unique=False)
    op.create_table('rack',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('status', sqlalchemy_utils.types.choice.ChoiceType(RackStatus), nullable=False),
    sa.Column('serial_num', sa.String(), nullable=True),
    sa.Column('asset_tag', sa.String(), nullable=True),
    sa.Column('u_width', sa.Float(), nullable=True),
    sa.Column('u_height', sa.Float(), nullable=True),
    sa.Column('site_id', sa.Integer(), nullable=False),
    sa.Column('location_id', sa.Integer(), nullable=True),
    sa.Column('rack_role_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['location_id'], ['location.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['rack_role_id'], ['rack_role.id'], ondelete='RESTRICT'),
    sa.ForeignKeyConstraint(['site_id'], ['site.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('asset_tag'),
    sa.UniqueConstraint('serial_num')
    )
    op.create_index(op.f('ix_rack_created_at'), 'rack', ['created_at'], unique=False)
    op.create_table('rack_role_audit_log',
    sa.Column('parent_id', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('request_id', sa.String(), nullable=False),
    sa.Column('action', sa.String(), nullable=False),
    sa.Column('diff', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['parent_id'], ['rack_role.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('route_target_audit_log',
    sa.Column('parent_id', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('request_id', sa.String(), nullable=False),
    sa.Column('action', sa.String(), nullable=False),
    sa.Column('diff', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['parent_id'], ['route_target.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('site_audit_log',
    sa.Column('parent_id', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('request_id', sa.String(), nullable=False),
    sa.Column('action', sa.String(), nullable=False),
    sa.Column('diff', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['parent_id'], ['site.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('site_group_audit_log',
    sa.Column('parent_id', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('request_id', sa.String(), nullable=False),
    sa.Column('action', sa.String(), nullable=False),
    sa.Column('diff', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['parent_id'], ['site_group.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('vendor_audit_log',
    sa.Column('parent_id', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('request_id', sa.String(), nullable=False),
    sa.Column('action', sa.String(), nullable=False),
    sa.Column('diff', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['parent_id'], ['vendor.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('vlan_audit_log',
    sa.Column('parent_id', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('request_id', sa.String(), nullable=False),
    sa.Column('action', sa.String(), nullable=False),
    sa.Column('diff', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['parent_id'], ['vlan.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('vrf_audit_log',
    sa.Column('parent_id', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('request_id', sa.String(), nullable=False),
    sa.Column('action', sa.String(), nullable=False),
    sa.Column('diff', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['parent_id'], ['vrf.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('device',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('management_ipv4', postgresql.INET(), nullable=True),
    sa.Column('management_ipv6', postgresql.INET(), nullable=True),
    sa.Column('oob_ip', postgresql.INET(), nullable=True),
    sa.Column('status', sqlalchemy_utils.types.choice.ChoiceType(DeviceStatus), nullable=False),
    sa.Column('version', sa.String(), nullable=True),
    sa.Column('comments', sa.String(), nullable=True),
    sa.Column('serial_num', sa.String(), nullable=True),
    sa.Column('asset_tag', sa.String(), nullable=True),
    sa.Column('position', sa.Integer(), nullable=True),
    sa.Column('device_type_id', sa.Integer(), nullable=False),
    sa.Column('device_role_id', sa.Integer(), nullable=False),
    sa.Column('platform_id', sa.Integer(), nullable=False, comment='redundant platform.id for query performance'),
    sa.Column('vendor_id', sa.Integer(), nullable=False, comment='redundant vendor.id for query performance'),
    sa.Column('site_id', sa.Integer(), nullable=False),
    sa.Column('location_id', sa.Integer(), nullable=True),
    sa.Column('rack_id', sa.Integer(), nullable=True),
    sa.Column('device_group_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['device_group_id'], ['device_group.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['device_role_id'], ['device_role.id'], ondelete='RESTRICT'),
    sa.ForeignKeyConstraint(['device_type_id'], ['device_type.id'], ondelete='RESTRICT'),
    sa.ForeignKeyConstraint(['location_id'], ['location.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['rack_id'], ['rack.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['site_id'], ['site.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('rack_id', 'position'),
    sa.UniqueConstraint('serial_num')
    )
    op.create_index(op.f('ix_device_created_at'), 'device', ['created_at'], unique=False)
    op.create_index(op.f('ix_device_management_ipv4'), 'device', ['management_ipv4'], unique=False)
    op.create_index(op.f('ix_device_management_ipv6'), 'device', ['management_ipv6'], unique=False)
    op.create_index(op.f('ix_device_name'), 'device', ['name'], unique=False)
    op.create_table('prefix_audit_log',
    sa.Column('parent_id', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('request_id', sa.String(), nullable=False),
    sa.Column('action', sa.String(), nullable=False),
    sa.Column('diff', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['parent_id'], ['prefix.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('rack_audit_log',
    sa.Column('parent_id', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('request_id', sa.String(), nullable=False),
    sa.Column('action', sa.String(), nullable=False),
    sa.Column('diff', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['parent_id'], ['rack.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('baseline_config',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('aaa_server', src.db.db_types.EncryptedString(), nullable=True),
    sa.Column('dhcp_server', src.db.db_types.EncryptedString(), nullable=True),
    sa.Column('dns_server', src.db.db_types.EncryptedString(), nullable=True),
    sa.Column('ntp_server', src.db.db_types.EncryptedString(), nullable=True),
    sa.Column('syslog_server', src.db.db_types.EncryptedString(), nullable=True),
    sa.Column('netflow_server', src.db.db_types.EncryptedString(), nullable=True),
    sa.Column('site_group_id', sa.Integer(), nullable=True),
    sa.Column('site_id', sa.Integer(), nullable=True),
    sa.Column('device_group_id', sa.Integer(), nullable=True),
    sa.Column('device_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['device_group_id'], ['device_group.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['device_id'], ['device.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['site_group_id'], ['site_group.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['site_id'], ['site.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_baseline_config_created_at'), 'baseline_config', ['created_at'], unique=False)
    op.create_table('device_audit_log',
    sa.Column('parent_id', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('request_id', sa.String(), nullable=False),
    sa.Column('action', sa.String(), nullable=False),
    sa.Column('diff', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['parent_id'], ['device.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('device_credential',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('cli', src.db.db_types.EncryptedString(), nullable=True),
    sa.Column('snmpv2_read', src.db.db_types.EncryptedString(), nullable=True),
    sa.Column('snmpv2_write', src.db.db_types.EncryptedString(), nullable=True),
    sa.Column('snmpv3', src.db.db_types.EncryptedString(), nullable=True),
    sa.Column('http_read', src.db.db_types.EncryptedString(), nullable=True),
    sa.Column('http_write', src.db.db_types.EncryptedString(), nullable=True),
    sa.Column('site_group_id', sa.Integer(), nullable=True),
    sa.Column('site_id', sa.Integer(), nullable=True),
    sa.Column('device_group_id', sa.Integer(), nullable=True),
    sa.Column('device_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['device_group_id'], ['device_group.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['device_id'], ['device.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['site_group_id'], ['site_group.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['site_id'], ['site.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_device_credential_created_at'), 'device_credential', ['created_at'], unique=False)
    op.create_table('device_entity',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('index', sa.String(), nullable=False),
    sa.Column('entity_class', sqlalchemy_utils.types.choice.ChoiceType(EntityPhysicalClass), nullable=False),
    sa.Column('hardware_version', sa.String(), nullable=True),
    sa.Column('software_version', sa.String(), nullable=True),
    sa.Column('serial_num', sa.String(), nullable=True),
    sa.Column('module_name', sa.String(), nullable=True),
    sa.Column('asset_id', sa.String(), nullable=True),
    sa.Column('order', sa.Integer(), nullable=False),
    sa.Column('device_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['device_id'], ['device.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id', 'index')
    )
    op.create_index(op.f('ix_device_entity_created_at'), 'device_entity', ['created_at'], unique=False)
    op.create_table('interface',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('if_index', sa.Integer(), nullable=True),
    sa.Column('speed', sa.Integer(), nullable=True),
    sa.Column('mode', sa.String(), nullable=False),
    sa.Column('interface_type', sa.String(), nullable=True),
    sa.Column('mtu', sa.Integer(), nullable=True),
    sa.Column('admin_state', sqlalchemy_utils.types.choice.ChoiceType(InterfaceAdminStatus), nullable=False),
    sa.Column('device_id', sa.Integer(), nullable=False),
    sa.Column('lag_interface_id', sa.Integer(), nullable=True, comment='port channel or eth-trunk'),
    sa.Column('parent_interface_id', sa.Integer(), nullable=True, comment='child interface, like g0/0/1.0'),
    sa.Column('vrf_id', sa.Integer(), nullable=True),
    sa.Column('vlan_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['device_id'], ['device.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['lag_interface_id'], ['interface.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['parent_interface_id'], ['interface.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['vlan_id'], ['vlan.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['vrf_id'], ['vrf.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('device_id', 'name')
    )
    op.create_table('baseline_config_audit_log',
    sa.Column('parent_id', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('request_id', sa.String(), nullable=False),
    sa.Column('action', sa.String(), nullable=False),
    sa.Column('diff', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['parent_id'], ['baseline_config.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('circuit',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('slug', sa.String(), nullable=False),
    sa.Column('cid', sa.String(), nullable=True),
    sa.Column('status', sqlalchemy_utils.types.choice.ChoiceType(CircuitStatus), nullable=False),
    sa.Column('install_date', sa.Date(), nullable=True),
    sa.Column('purchase_term', sa.String(), nullable=True),
    sa.Column('bandwidth', sa.Integer(), nullable=False, comment='Mbps'),
    sa.Column('comments', sa.TEXT(), nullable=True),
    sa.Column('vendor_available_ip', postgresql.ARRAY(postgresql.INET()), nullable=True),
    sa.Column('vendor_available_gateway', postgresql.ARRAY(postgresql.INET()), nullable=True),
    sa.Column('isp_id', sa.Integer(), nullable=False),
    sa.Column('circuit_type_id', sa.Integer(), nullable=False),
    sa.Column('site_a_id', sa.Integer(), nullable=False),
    sa.Column('device_a_id', sa.Integer(), nullable=False),
    sa.Column('interface_a_id', sa.Integer(), nullable=False),
    sa.Column('site_z_id', sa.Integer(), nullable=True),
    sa.Column('device_z_id', sa.Integer(), nullable=True),
    sa.Column('interface_z_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['circuit_type_id'], ['circuit_type.id'], ondelete='RESTRICT'),
    sa.ForeignKeyConstraint(['device_a_id'], ['device.id'], ondelete='RESTRICT'),
    sa.ForeignKeyConstraint(['device_z_id'], ['device.id'], ondelete='RESTRICT'),
    sa.ForeignKeyConstraint(['interface_a_id'], ['interface.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['interface_z_id'], ['interface.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['isp_id'], ['isp.id'], ondelete='RESTRICT'),
    sa.ForeignKeyConstraint(['site_a_id'], ['site.id'], ondelete='RESTRICT'),
    sa.ForeignKeyConstraint(['site_z_id'], ['site.id'], ondelete='RESTRICT'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('cid'),
    sa.UniqueConstraint('name'),
    sa.UniqueConstraint('slug')
    )
    op.create_index(op.f('ix_circuit_created_at'), 'circuit', ['created_at'], unique=False)
    op.create_table('device_credential_audit_log',
    sa.Column('parent_id', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('request_id', sa.String(), nullable=False),
    sa.Column('action', sa.String(), nullable=False),
    sa.Column('diff', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['parent_id'], ['device_credential.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('device_entity_audit_log',
    sa.Column('parent_id', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('request_id', sa.String(), nullable=False),
    sa.Column('action', sa.String(), nullable=False),
    sa.Column('diff', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['parent_id'], ['device_entity.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('ip_address',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('address', postgresql.INET(), nullable=False),
    sa.Column('vrf_id', sa.Integer(), nullable=True),
    sa.Column('version', sa.Integer(), nullable=False),
    sa.Column('status', sqlalchemy_utils.types.choice.ChoiceType(IPAddressStatus), nullable=False),
    sa.Column('dns_name', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('interface_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['interface_id'], ['interface.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['vrf_id'], ['vrf.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_ip_address_created_at'), 'ip_address', ['created_at'], unique=False)
    op.create_table('circuit_audit_log',
    sa.Column('parent_id', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('request_id', sa.String(), nullable=False),
    sa.Column('action', sa.String(), nullable=False),
    sa.Column('diff', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['parent_id'], ['circuit.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('circuit_contact',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('contact_id', sa.Integer(), nullable=False),
    sa.Column('circuit_id', sa.Integer(), nullable=False),
    sa.Column('contact_role_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['circuit_id'], ['circuit.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['contact_id'], ['contact.id'], ondelete='RESTRICT'),
    sa.ForeignKeyConstraint(['contact_role_id'], ['contact_role.id'], ondelete='RESTRICT'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('ip_address_audit_log',
    sa.Column('parent_id', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('request_id', sa.String(), nullable=False),
    sa.Column('action', sa.String(), nullable=False),
    sa.Column('diff', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['parent_id'], ['ip_address.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('ip_address_user',
    sa.Column('ip_address_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['ip_address_id'], ['ip_address.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('ip_address_id', 'user_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('ip_address_user')
    op.drop_table('ip_address_audit_log')
    op.drop_table('circuit_contact')
    op.drop_table('circuit_audit_log')
    op.drop_index(op.f('ix_ip_address_created_at'), table_name='ip_address')
    op.drop_table('ip_address')
    op.drop_table('device_entity_audit_log')
    op.drop_table('device_credential_audit_log')
    op.drop_index(op.f('ix_circuit_created_at'), table_name='circuit')
    op.drop_table('circuit')
    op.drop_table('baseline_config_audit_log')
    op.drop_table('interface')
    op.drop_index(op.f('ix_device_entity_created_at'), table_name='device_entity')
    op.drop_table('device_entity')
    op.drop_index(op.f('ix_device_credential_created_at'), table_name='device_credential')
    op.drop_table('device_credential')
    op.drop_table('device_audit_log')
    op.drop_index(op.f('ix_baseline_config_created_at'), table_name='baseline_config')
    op.drop_table('baseline_config')
    op.drop_table('rack_audit_log')
    op.drop_table('prefix_audit_log')
    op.drop_index(op.f('ix_device_name'), table_name='device')
    op.drop_index(op.f('ix_device_management_ipv6'), table_name='device')
    op.drop_index(op.f('ix_device_management_ipv4'), table_name='device')
    op.drop_index(op.f('ix_device_created_at'), table_name='device')
    op.drop_table('device')
    op.drop_table('vrf_audit_log')
    op.drop_table('vlan_audit_log')
    op.drop_table('vendor_audit_log')
    op.drop_table('site_group_audit_log')
    op.drop_table('site_audit_log')
    op.drop_table('route_target_audit_log')
    op.drop_table('rack_role_audit_log')
    op.drop_index(op.f('ix_rack_created_at'), table_name='rack')
    op.drop_table('rack')
    op.drop_index(op.f('ix_prefix_created_at'), table_name='prefix')
    op.drop_table('prefix')
    op.drop_table('platform_audit_log')
    op.drop_table('location_audit_log')
    op.drop_table('isp_audit_log')
    op.drop_table('ip_role_audit_log')
    op.drop_table('ip_range_audit_log')
    op.drop_table('device_type_audit_log')
    op.drop_table('device_role_audit_log')
    op.drop_table('device_group_audit_log')
    op.drop_table('contact_role_audit_log')
    op.drop_table('contact_audit_log')
    op.drop_table('circuit_type_audit_log')
    op.drop_table('block_audit_log')
    op.drop_table('asn_audit_log')
    op.drop_index(op.f('ix_vlan_created_at'), table_name='vlan')
    op.drop_table('vlan')
    op.drop_index(op.f('ix_user_created_at'), table_name='user')
    op.drop_table('user')
    op.drop_table('site_contact')
    op.drop_table('site_asn')
    op.drop_index(op.f('ix_location_created_at'), table_name='location')
    op.drop_table('location')
    op.drop_table('vrf_route_target')
    op.drop_table('textfsm_template')
    op.drop_index(op.f('ix_site_site_code'), table_name='site')
    op.drop_index(op.f('ix_site_created_at'), table_name='site')
    op.drop_table('site')
    op.drop_table('role_permission')
    op.drop_table('role_menu')
    op.drop_table('jinja_template')
    op.drop_table('isp_asn')
    op.drop_index(op.f('ix_ip_range_created_at'), table_name='ip_range')
    op.drop_table('ip_range')
    op.drop_index(op.f('ix_group_created_at'), table_name='group')
    op.drop_table('group')
    op.drop_index(op.f('ix_device_type_created_at'), table_name='device_type')
    op.drop_table('device_type')
    op.drop_table('wlan_config')
    op.drop_index(op.f('ix_vrf_created_at'), table_name='vrf')
    op.drop_table('vrf')
    op.drop_index(op.f('ix_vendor_created_at'), table_name='vendor')
    op.drop_table('vendor')
    op.drop_index(op.f('ix_site_group_created_at'), table_name='site_group')
    op.drop_table('site_group')
    op.drop_index(op.f('ix_route_target_created_at'), table_name='route_target')
    op.drop_table('route_target')
    op.drop_index(op.f('ix_role_created_at'), table_name='role')
    op.drop_table('role')
    op.drop_index(op.f('ix_rack_role_created_at'), table_name='rack_role')
    op.drop_table('rack_role')
    op.drop_index(op.f('ix_platform_created_at'), table_name='platform')
    op.drop_table('platform')
    op.drop_table('permission')
    op.drop_table('menu')
    op.drop_index(op.f('ix_isp_created_at'), table_name='isp')
    op.drop_table('isp')
    op.drop_index(op.f('ix_ip_role_created_at'), table_name='ip_role')
    op.drop_table('ip_role')
    op.drop_index(op.f('ix_device_role_created_at'), table_name='device_role')
    op.drop_table('device_role')
    op.drop_index(op.f('ix_device_group_created_at'), table_name='device_group')
    op.drop_table('device_group')
    op.drop_index(op.f('ix_contact_role_created_at'), table_name='contact_role')
    op.drop_table('contact_role')
    op.drop_index(op.f('ix_contact_created_at'), table_name='contact')
    op.drop_table('contact')
    op.drop_index(op.f('ix_circuit_type_created_at'), table_name='circuit_type')
    op.drop_table('circuit_type')
    op.drop_index(op.f('ix_block_created_at'), table_name='block')
    op.drop_table('block')
    op.drop_index(op.f('ix_asn_created_at'), table_name='asn')
    op.drop_table('asn')
    # ### end Alembic commands ###
